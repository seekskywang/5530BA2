; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\load_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\load_face.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\load_face.crf --no_multibyte_chars ..\APP\load_Face.c]
                          THUMB

                          AREA ||i.CreateWindow2||, CODE, READONLY, ALIGN=2

                  CreateWindow2 PROC
;;;711    
;;;712    WM_HWIN CreateWindow2(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;713      if(page_sw == face_graph)
000002  4c1f              LDR      r4,|L1.128|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L1.14|
;;;714      {      
;;;715      }else{
;;;716          IO_OFF();
00000a  f7fffffe          BL       IO_OFF
                  |L1.14|
;;;717      }
;;;718      page_sw = face_load;
00000e  2004              MOVS     r0,#4
000010  7020              STRB     r0,[r4,#0]
;;;719      track = face_load;
000012  491c              LDR      r1,|L1.132|
000014  7008              STRB     r0,[r1,#0]
;;;720      set_sw = set_24;
000016  491c              LDR      r1,|L1.136|
000018  2017              MOVS     r0,#0x17
00001a  7008              STRB     r0,[r1,#0]
;;;721      load_cutoffv = (float)set_load_cutoffv/1000;
00001c  481b              LDR      r0,|L1.140|
00001e  eddf0a1c          VLDR     s1,|L1.144|
000022  4e1c              LDR      r6,|L1.148|
000024  ed900a04          VLDR     s0,[r0,#0x10]
000028  eeb80ac0          VCVT.F32.S32 s0,s0
00002c  ee801a20          VDIV.F32 s2,s0,s1
000030  ed861a02          VSTR     s2,[r6,#8]
;;;722      SET_Current_Laod = load_c;
000034  4c18              LDR      r4,|L1.152|
000036  f8d40094          LDR      r0,[r4,#0x94]  ; Run_Control
00003a  6120              STR      r0,[r4,#0x10]  ; Run_Control
;;;723       C_SW(0);
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       C_SW
;;;724    //  if(SET_Current_Laod > 2500)
;;;725    //  {
;;;726    //	  C_SW(1);
;;;727    //  }else{
;;;728    //	  C_SW(0);
;;;729    //  }
;;;730      pass = 0;  
000042  4816              LDR      r0,|L1.156|
000044  2500              MOVS     r5,#0
000046  7005              STRB     r5,[r0,#0]
;;;731      mode_sw = mode_load;
000048  4915              LDR      r1,|L1.160|
00004a  2002              MOVS     r0,#2
00004c  7008              STRB     r0,[r1,#0]
;;;732      SET_Voltage_Laod = load_v; 
00004e  f8d400a4          LDR      r0,[r4,#0xa4]  ; Run_Control
000052  60e0              STR      r0,[r4,#0xc]  ; Run_Control
;;;733    //   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;734    //   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;735    //   GPIO_SetBits(GPIOC,GPIO_Pin_13);//关闭电源输出继电器
;;;736      TM1650_SET_LED(0x68,0x70);
000054  2170              MOVS     r1,#0x70
000056  2068              MOVS     r0,#0x68
000058  f7fffffe          BL       TM1650_SET_LED
;;;737      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00005c  f44f5180          MOV      r1,#0x1000
000060  4810              LDR      r0,|L1.164|
000062  f7fffffe          BL       GPIO_ResetBits
;;;738      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000066  f7fffffe          BL       WM_GetDesktopWindow
00006a  4603              MOV      r3,r0
00006c  9500              STR      r5,[sp,#0]
00006e  4a0e              LDR      r2,|L1.168|
000070  2118              MOVS     r1,#0x18
000072  480e              LDR      r0,|L1.172|
000074  9501              STR      r5,[sp,#4]
000076  f7fffffe          BL       GUI_CreateDialogBox
00007a  6070              STR      r0,[r6,#4]  ; load_wind
;;;739      return load_wind;
;;;740    }
00007c  bd7c              POP      {r2-r6,pc}
;;;741    
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      page_sw
                  |L1.132|
                          DCD      track
                  |L1.136|
                          DCD      set_sw
                  |L1.140|
                          DCD      InFlashSave
                  |L1.144|
000090  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.148|
                          DCD      ||.data||
                  |L1.152|
                          DCD      Run_Control
                  |L1.156|
                          DCD      pass
                  |L1.160|
                          DCD      mode_sw
                  |L1.164|
                          DCD      0x40020c00
                  |L1.168|
                          DCD      _cbDialog2
                  |L1.172|
                          DCD      ||.constdata||

                          AREA ||i.DEL_LOAD||, CODE, READONLY, ALIGN=2

                  DEL_LOAD PROC
;;;1042   }
;;;1043   void DEL_LOAD(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1044   {
;;;1045   	switch(set_sw){
000004  4827              LDR      r0,|L2.164|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;1046   		case set_25:
;;;1047           {
;;;1048   			WM_HWIN hItem;
;;;1049   //            WM_InvalidateWindow(hWinWind);
;;;1050               hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000008  4827              LDR      r0,|L2.168|
;;;1051   			if(bit > 0)
;;;1052   			{
;;;1053   				bit --;
;;;1054   				set_limit[bit] = '\0';
00000a  4f28              LDR      r7,|L2.172|
00000c  2400              MOVS     r4,#0                 ;1050
00000e  6840              LDR      r0,[r0,#4]            ;1050
000010  4d27              LDR      r5,|L2.176|
;;;1055   			}
;;;1056   			if(bit == dot_flag)
000012  4e28              LDR      r6,|L2.180|
000014  2918              CMP      r1,#0x18              ;1045
000016  d018              BEQ      |L2.74|
000018  2943              CMP      r1,#0x43              ;1045
00001a  d02b              BEQ      |L2.116|
00001c  2956              CMP      r1,#0x56              ;1045
00001e  d13e              BNE      |L2.158|
;;;1057   			{
;;;1058   				dot_flag = 0;
;;;1059   			}
;;;1060   			TEXT_SetText(hItem,set_limit);
;;;1061   		}break;
;;;1062   		case set_68:
;;;1063           {
;;;1064   			WM_HWIN hItem;
;;;1065   //            WM_InvalidateWindow(hWinWind);
;;;1066               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1067   			if(bit > 0)
;;;1068   			{
;;;1069   				bit --;
;;;1070   				set_limit[bit] = '\0';
;;;1071   			}
;;;1072   			if(bit == dot_flag)
;;;1073   			{
;;;1074   				dot_flag = 0;
;;;1075   			}
;;;1076   			TEXT_SetText(hItem,set_limit);
;;;1077   		}break;
;;;1078   		case set_87:
;;;1079           {
;;;1080               WM_HWIN hItem;
;;;1081   //            WM_InvalidateWindow(hWinWind);
;;;1082               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000020  f640112d          MOV      r1,#0x92d
000024  f7fffffe          BL       WM_GetDialogItem
;;;1083   			if(bit > 0)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  b121              CBZ      r1,|L2.54|
;;;1084   			{
;;;1085   				bit --;
00002c  7829              LDRB     r1,[r5,#0]  ; bit
00002e  1e49              SUBS     r1,r1,#1
000030  7029              STRB     r1,[r5,#0]
;;;1086   				set_limit[bit] = '\0';
000032  7829              LDRB     r1,[r5,#0]  ; bit
000034  547c              STRB     r4,[r7,r1]
                  |L2.54|
;;;1087   			}
;;;1088   			if(bit == dot_flag)
000036  7829              LDRB     r1,[r5,#0]  ; bit
000038  7832              LDRB     r2,[r6,#0]  ; dot_flag
00003a  4291              CMP      r1,r2
00003c  d100              BNE      |L2.64|
;;;1089   			{
;;;1090   				dot_flag = 0;
00003e  7034              STRB     r4,[r6,#0]
                  |L2.64|
;;;1091   			}
;;;1092   			TEXT_SetText(hItem,set_limit);
000040  e8bd41f0          POP      {r4-r8,lr}
000044  4919              LDR      r1,|L2.172|
000046  f7ffbffe          B.W      TEXT_SetText
                  |L2.74|
00004a  f640016e          MOV      r1,#0x86e             ;1050
00004e  f7fffffe          BL       WM_GetDialogItem
000052  7829              LDRB     r1,[r5,#0]            ;1051  ; bit
000054  b121              CBZ      r1,|L2.96|
000056  7829              LDRB     r1,[r5,#0]            ;1053  ; bit
000058  1e49              SUBS     r1,r1,#1              ;1053
00005a  7029              STRB     r1,[r5,#0]            ;1053
00005c  7829              LDRB     r1,[r5,#0]            ;1054  ; bit
00005e  547c              STRB     r4,[r7,r1]            ;1054
                  |L2.96|
000060  7829              LDRB     r1,[r5,#0]            ;1056  ; bit
000062  7832              LDRB     r2,[r6,#0]            ;1056  ; dot_flag
000064  4291              CMP      r1,r2                 ;1056
000066  d100              BNE      |L2.106|
000068  7034              STRB     r4,[r6,#0]            ;1058
                  |L2.106|
00006a  e8bd41f0          POP      {r4-r8,lr}            ;1060
00006e  490f              LDR      r1,|L2.172|
000070  f7ffbffe          B.W      TEXT_SetText
                  |L2.116|
000074  f6401111          MOV      r1,#0x911             ;1066
000078  f7fffffe          BL       WM_GetDialogItem
00007c  7829              LDRB     r1,[r5,#0]            ;1067  ; bit
00007e  b121              CBZ      r1,|L2.138|
000080  7829              LDRB     r1,[r5,#0]            ;1069  ; bit
000082  1e49              SUBS     r1,r1,#1              ;1069
000084  7029              STRB     r1,[r5,#0]            ;1069
000086  7829              LDRB     r1,[r5,#0]            ;1070  ; bit
000088  547c              STRB     r4,[r7,r1]            ;1070
                  |L2.138|
00008a  7829              LDRB     r1,[r5,#0]            ;1072  ; bit
00008c  7832              LDRB     r2,[r6,#0]            ;1072  ; dot_flag
00008e  4291              CMP      r1,r2                 ;1072
000090  d100              BNE      |L2.148|
000092  7034              STRB     r4,[r6,#0]            ;1074
                  |L2.148|
000094  e8bd41f0          POP      {r4-r8,lr}            ;1076
000098  4904              LDR      r1,|L2.172|
00009a  f7ffbffe          B.W      TEXT_SetText
                  |L2.158|
;;;1093   		}break;
;;;1094   	}
;;;1095   }
00009e  e8bd81f0          POP      {r4-r8,pc}
;;;1096   
                          ENDP

0000a2  0000              DCW      0x0000
                  |L2.164|
                          DCD      set_sw
                  |L2.168|
                          DCD      ||.data||
                  |L2.172|
                          DCD      set_limit
                  |L2.176|
                          DCD      bit
                  |L2.180|
                          DCD      dot_flag

                          AREA ||i.INPUT_LOAD||, CODE, READONLY, ALIGN=2

                  INPUT_LOAD PROC
;;;1097   void INPUT_LOAD(char* num);            
;;;1098   void INPUT_LOAD(char* num){
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
;;;1099   	u8 i;    
;;;1100       switch(set_sw)
000006  484f              LDR      r0,|L3.324|
000008  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;1101       {
;;;1102           case set_25:
;;;1103           {
;;;1104               WM_HWIN hItem;
;;;1105    //           WM_InvalidateWindow(load_wind);
;;;1106               hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
00000a  484f              LDR      r0,|L3.328|
00000c  2400              MOVS     r4,#0
;;;1107   			if(bit < 6)
;;;1108   			{
;;;1109   				strcat(set_limit,num);
00000e  4d4f              LDR      r5,|L3.332|
000010  6840              LDR      r0,[r0,#4]            ;1106
;;;1110   				if(dot_flag != 0 && strcmp(num,".") == 0)
000012  f8df813c          LDR      r8,|L3.336|
000016  4f4f              LDR      r7,|L3.340|
000018  2918              CMP      r1,#0x18              ;1100
00001a  d01d              BEQ      |L3.88|
00001c  2943              CMP      r1,#0x43              ;1100
00001e  d04b              BEQ      |L3.184|
000020  2956              CMP      r1,#0x56              ;1100
000022  d17c              BNE      |L3.286|
;;;1111   				{
;;;1112   					
;;;1113   				}else{			
;;;1114   					
;;;1115   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1116   					{
;;;1117   						dot_flag = bit;
;;;1118   					}
;;;1119   					bit ++;
;;;1120   				}
;;;1121   			}else{
;;;1122   				bit = 0;
;;;1123   				for(i=0;i<6;i++)
;;;1124   				{
;;;1125   					set_limit[i] = '\0';
;;;1126   				}
;;;1127   			}
;;;1128   			
;;;1129   			TEXT_SetText(hItem,set_limit);
;;;1130   //            switch(bit){
;;;1131   //                case 1:
;;;1132   //                {
;;;1133   //					for(i=0;i<6;i++)
;;;1134   //					{
;;;1135   //						set_limit[i] = '\0';
;;;1136   //					}
;;;1137   //                    load_c = atoi(num) * 1000;
;;;1138   //                    strcat(set_limit,num);            
;;;1139   //                    TEXT_SetText(hItem,set_limit);
;;;1140   //                    
;;;1141   //                    bit = 2;
;;;1142   //                    break;
;;;1143   //                }
;;;1144   //                case 2:
;;;1145   //                {
;;;1146   //                    strcat(set_limit,num);            
;;;1147   //                    TEXT_SetText(hItem,set_limit);
;;;1148   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1149   //                    {
;;;1150   //                        dot_flag = 1;
;;;1151   //                    }else{
;;;1152   //                        load_c = load_c * 10 + atoi(num) * 1000;
;;;1153   //                    }
;;;1154   //                    bit = 3;
;;;1155   //                    break;
;;;1156   //                }
;;;1157   //                case 3:
;;;1158   //                {
;;;1159   //                    strcat(set_limit,num);
;;;1160   //                    TEXT_SetText(hItem,set_limit);
;;;1161   //                    if(dot_flag == 0)
;;;1162   //                    {
;;;1163   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1164   //                        {                            
;;;1165   //                            dot_flag = 2;
;;;1166   //                        }else{
;;;1167   //                            load_c = 0;
;;;1168   //                        }
;;;1169   //                    }else{
;;;1170   //                        load_c = load_c + atoi(num) * 100;
;;;1171   //                    }                  
;;;1172   //                    bit = 4;
;;;1173   //                    break;
;;;1174   //                }
;;;1175   //                case 4:
;;;1176   //                {
;;;1177   //                    strcat(set_limit,num);
;;;1178   //                    TEXT_SetText(hItem,set_limit);
;;;1179   //                    if(dot_flag == 0)
;;;1180   //                    {
;;;1181   //                        load_c = 0;
;;;1182   //                    }else if(dot_flag == 2){
;;;1183   //                        load_c = load_c + atoi(num) * 100;
;;;1184   //                    }else{
;;;1185   //                        load_c = load_c + atoi(num) * 10;
;;;1186   //                    }                  
;;;1187   //                    bit = 5;
;;;1188   //                    break;
;;;1189   //                }
;;;1190   //                case 5:
;;;1191   //                {
;;;1192   //                    strcat(set_limit,num);
;;;1193   //                    TEXT_SetText(hItem,set_limit);
;;;1194   //                    if(dot_flag == 0)
;;;1195   //                    {
;;;1196   //                        load_c = 0;
;;;1197   //                    }else if(dot_flag == 1){
;;;1198   //                        load_c = load_c + atoi(num);
;;;1199   //                    }else{
;;;1200   //                        load_c = load_c + atoi(num) * 10;
;;;1201   //                    }                 
;;;1202   //                    bit = 6;
;;;1203   //                    break;
;;;1204   //                }
;;;1205   //                case 6:
;;;1206   //                {
;;;1207   //                    strcat(set_limit,num);
;;;1208   //                    TEXT_SetText(hItem,set_limit);
;;;1209   //                    if(dot_flag == 0)
;;;1210   //                    {
;;;1211   //                        load_c = 0;
;;;1212   //                    }else if(dot_flag == 2){
;;;1213   //                        load_c = load_c + atoi(num);
;;;1214   //                    }                 
;;;1215   //                    bit = 0;
;;;1216   //                    break;
;;;1217   //                }
;;;1218   //            }
;;;1219               break;
;;;1220               
;;;1221           }
;;;1222           case set_68:
;;;1223           {
;;;1224               WM_HWIN hItem;
;;;1225    //           WM_InvalidateWindow(load_wind);
;;;1226               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1227   			if(bit < 6)
;;;1228   			{
;;;1229   				strcat(set_limit,num);
;;;1230   				if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1231   				{
;;;1232   					
;;;1233   				}else{			
;;;1234   					
;;;1235   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1236   					{
;;;1237   						dot_flag = bit;
;;;1238   					}
;;;1239   					bit ++;
;;;1240   				}
;;;1241   			}else{
;;;1242   				bit = 0;
;;;1243   				for(i=0;i<6;i++)
;;;1244   				{
;;;1245   					set_limit[i] = '\0';
;;;1246   				}
;;;1247   			}
;;;1248   			
;;;1249   			TEXT_SetText(hItem,set_limit);
;;;1250   //            switch(bit){
;;;1251   //                case 1:
;;;1252   //                {
;;;1253   //					for(i=0;i<6;i++)
;;;1254   //					{
;;;1255   //						set_limit[i] = '\0';
;;;1256   //					}
;;;1257   //                    load_v = atoi(num) * 1000;
;;;1258   //                    strcat(set_limit,num);            
;;;1259   //                    TEXT_SetText(hItem,set_limit);
;;;1260   //                    
;;;1261   //                    bit = 2;
;;;1262   //                    break;
;;;1263   //                }
;;;1264   //                case 2:
;;;1265   //                {
;;;1266   //                    strcat(set_limit,num);            
;;;1267   //                    TEXT_SetText(hItem,set_limit);
;;;1268   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1269   //                    {
;;;1270   //                        dot_flag = 1;
;;;1271   //                    }else{
;;;1272   //                        load_v = load_v * 10 + atoi(num) * 1000;
;;;1273   //                    }
;;;1274   //                    bit = 3;
;;;1275   //                    break;
;;;1276   //                }
;;;1277   //                case 3:
;;;1278   //                {
;;;1279   //                    strcat(set_limit,num);
;;;1280   //                    TEXT_SetText(hItem,set_limit);
;;;1281   //                    if(dot_flag == 0)
;;;1282   //                    {
;;;1283   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1284   //                        {                            
;;;1285   //                            dot_flag = 2;
;;;1286   //                        }else{
;;;1287   //                            load_v = 0;
;;;1288   //                        }
;;;1289   //                    }else{
;;;1290   //                        load_v = load_v + atoi(num) * 100;
;;;1291   //                    }                  
;;;1292   //                    bit = 4;
;;;1293   //                    break;
;;;1294   //                }
;;;1295   //                case 4:
;;;1296   //                {
;;;1297   //                    strcat(set_limit,num);
;;;1298   //                    TEXT_SetText(hItem,set_limit);
;;;1299   //                    if(dot_flag == 0)
;;;1300   //                    {
;;;1301   //                        load_v = 0;
;;;1302   //                    }else if(dot_flag == 2){
;;;1303   //                        load_v = load_v + atoi(num) * 100;
;;;1304   //                    }else{
;;;1305   //                        load_v = load_v + atoi(num) * 10;
;;;1306   //                    }                  
;;;1307   //                    bit = 5;
;;;1308   //                    break;
;;;1309   //                }
;;;1310   //                case 5:
;;;1311   //                {
;;;1312   //                    strcat(set_limit,num);
;;;1313   //                    TEXT_SetText(hItem,set_limit);
;;;1314   //                    if(dot_flag == 0)
;;;1315   //                    {
;;;1316   //                        load_v = 0;
;;;1317   //                    }else if(dot_flag == 1){
;;;1318   //                        load_v = load_v + atoi(num);
;;;1319   //                    }else{
;;;1320   //                        load_v = load_v + atoi(num) * 10;
;;;1321   //                    }                 
;;;1322   //                    bit = 6;
;;;1323   //                    break;
;;;1324   //                }
;;;1325   //                case 6:
;;;1326   //                {
;;;1327   //                    strcat(set_limit,num);
;;;1328   //                    TEXT_SetText(hItem,set_limit);
;;;1329   //                    if(dot_flag == 0)
;;;1330   //                    {
;;;1331   //                        load_v = 0;
;;;1332   //                    }else if(dot_flag == 2){
;;;1333   //                        load_v = load_v + atoi(num);
;;;1334   //                    }                 
;;;1335   //                    bit = 0;
;;;1336   //                    break;
;;;1337   //                }
;;;1338   //            }
;;;1339               break;
;;;1340               
;;;1341           }
;;;1342   		case set_87:
;;;1343           {
;;;1344               WM_HWIN hItem;
;;;1345    //           WM_InvalidateWindow(load_wind);
;;;1346               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000024  f640112d          MOV      r1,#0x92d
000028  f7fffffe          BL       WM_GetDialogItem
00002c  4604              MOV      r4,r0
;;;1347   			if(bit < 7)
00002e  7838              LDRB     r0,[r7,#0]  ; bit
000030  2807              CMP      r0,#7
000032  d203              BCS      |L3.60|
;;;1348   			{
;;;1349   				strcat(set_limit,num);
000034  4649              MOV      r1,r9
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       strcat
                  |L3.60|
;;;1350   			}
;;;1351   			if(dot_flag != 0 && strcmp(num,".") == 0)
00003c  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000040  b128              CBZ      r0,|L3.78|
000042  a145              ADR      r1,|L3.344|
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       strcmp
00004a  2800              CMP      r0,#0
00004c  d072              BEQ      |L3.308|
                  |L3.78|
;;;1352   			{
;;;1353   				
;;;1354   			}else{			
;;;1355   				
;;;1356   				if(dot_flag == 0 && strcmp(num,".") == 0)
00004e  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000052  2800              CMP      r0,#0
000054  d060              BEQ      |L3.280|
000056  e06a              B        |L3.302|
                  |L3.88|
000058  f640016e          MOV      r1,#0x86e             ;1106
00005c  f7fffffe          BL       WM_GetDialogItem
000060  4606              MOV      r6,r0                 ;1106
000062  7838              LDRB     r0,[r7,#0]            ;1107  ; bit
000064  2806              CMP      r0,#6                 ;1107
000066  d21a              BCS      |L3.158|
000068  4649              MOV      r1,r9                 ;1109
00006a  4838              LDR      r0,|L3.332|
00006c  f7fffffe          BL       strcat
000070  f8980000          LDRB     r0,[r8,#0]            ;1110  ; dot_flag
000074  b120              CBZ      r0,|L3.128|
000076  a138              ADR      r1,|L3.344|
000078  4648              MOV      r0,r9                 ;1110
00007a  f7fffffe          BL       strcmp
00007e  b1a8              CBZ      r0,|L3.172|
                  |L3.128|
000080  f8980000          LDRB     r0,[r8,#0]            ;1115  ; dot_flag
000084  b938              CBNZ     r0,|L3.150|
000086  a134              ADR      r1,|L3.344|
000088  4648              MOV      r0,r9                 ;1115
00008a  f7fffffe          BL       strcmp
00008e  b910              CBNZ     r0,|L3.150|
000090  7838              LDRB     r0,[r7,#0]            ;1117  ; bit
000092  f8880000          STRB     r0,[r8,#0]            ;1117
                  |L3.150|
000096  7838              LDRB     r0,[r7,#0]            ;1119  ; bit
000098  1c40              ADDS     r0,r0,#1              ;1119
00009a  7038              STRB     r0,[r7,#0]            ;1119
00009c  e006              B        |L3.172|
                  |L3.158|
00009e  703c              STRB     r4,[r7,#0]            ;1122
0000a0  2000              MOVS     r0,#0                 ;1123
                  |L3.162|
0000a2  542c              STRB     r4,[r5,r0]            ;1125
0000a4  1c40              ADDS     r0,r0,#1              ;1123
0000a6  b2c0              UXTB     r0,r0                 ;1123
0000a8  2806              CMP      r0,#6                 ;1123
0000aa  d3fa              BCC      |L3.162|
                  |L3.172|
0000ac  4630              MOV      r0,r6                 ;1129
0000ae  e8bd47f0          POP      {r4-r10,lr}           ;1129
0000b2  4926              LDR      r1,|L3.332|
0000b4  f7ffbffe          B.W      TEXT_SetText
                  |L3.184|
0000b8  f6401111          MOV      r1,#0x911             ;1226
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4606              MOV      r6,r0                 ;1226
0000c2  7838              LDRB     r0,[r7,#0]            ;1227  ; bit
0000c4  2806              CMP      r0,#6                 ;1227
0000c6  d21a              BCS      |L3.254|
0000c8  4649              MOV      r1,r9                 ;1229
0000ca  4820              LDR      r0,|L3.332|
0000cc  f7fffffe          BL       strcat
0000d0  f8980000          LDRB     r0,[r8,#0]            ;1230  ; dot_flag
0000d4  b120              CBZ      r0,|L3.224|
0000d6  a120              ADR      r1,|L3.344|
0000d8  4648              MOV      r0,r9                 ;1230
0000da  f7fffffe          BL       strcmp
0000de  b1a8              CBZ      r0,|L3.268|
                  |L3.224|
0000e0  f8980000          LDRB     r0,[r8,#0]            ;1235  ; dot_flag
0000e4  b938              CBNZ     r0,|L3.246|
0000e6  a11c              ADR      r1,|L3.344|
0000e8  4648              MOV      r0,r9                 ;1235
0000ea  f7fffffe          BL       strcmp
0000ee  b910              CBNZ     r0,|L3.246|
0000f0  7838              LDRB     r0,[r7,#0]            ;1237  ; bit
0000f2  f8880000          STRB     r0,[r8,#0]            ;1237
                  |L3.246|
0000f6  7838              LDRB     r0,[r7,#0]            ;1239  ; bit
0000f8  1c40              ADDS     r0,r0,#1              ;1239
0000fa  7038              STRB     r0,[r7,#0]            ;1239
0000fc  e006              B        |L3.268|
                  |L3.254|
0000fe  703c              STRB     r4,[r7,#0]            ;1242
000100  2000              MOVS     r0,#0                 ;1243
                  |L3.258|
000102  542c              STRB     r4,[r5,r0]            ;1245
000104  1c40              ADDS     r0,r0,#1              ;1243
000106  b2c0              UXTB     r0,r0                 ;1243
000108  2806              CMP      r0,#6                 ;1243
00010a  d3fa              BCC      |L3.258|
                  |L3.268|
00010c  4630              MOV      r0,r6                 ;1249
00010e  e8bd47f0          POP      {r4-r10,lr}           ;1249
000112  490e              LDR      r1,|L3.332|
000114  f7ffbffe          B.W      TEXT_SetText
                  |L3.280|
000118  a10f              ADR      r1,|L3.344|
00011a  4648              MOV      r0,r9
00011c  e001              B        |L3.290|
                  |L3.286|
00011e  e00f              B        |L3.320|
000120  e008              B        |L3.308|
                  |L3.290|
000122  f7fffffe          BL       strcmp
000126  b910              CBNZ     r0,|L3.302|
;;;1357   				{
;;;1358   					dot_flag = bit;
000128  7838              LDRB     r0,[r7,#0]  ; bit
00012a  f8880000          STRB     r0,[r8,#0]
                  |L3.302|
;;;1359   				}
;;;1360   				bit ++;
00012e  7838              LDRB     r0,[r7,#0]  ; bit
000130  1c40              ADDS     r0,r0,#1
000132  7038              STRB     r0,[r7,#0]
                  |L3.308|
;;;1361   			}
;;;1362   			TEXT_SetText(hItem,set_limit);
000134  4620              MOV      r0,r4
000136  e8bd47f0          POP      {r4-r10,lr}
00013a  4904              LDR      r1,|L3.332|
00013c  f7ffbffe          B.W      TEXT_SetText
                  |L3.320|
;;;1363   //            switch(bit){
;;;1364   //                case 1:
;;;1365   //                {
;;;1366   //					for(i=0;i<6;i++)
;;;1367   //					{
;;;1368   //						set_limit[i] = '\0';
;;;1369   //					}
;;;1370   //                    set_load_cutoffv = atoi(num) * 1000;
;;;1371   //                    strcat(set_limit,num);            
;;;1372   //                    TEXT_SetText(hItem,set_limit);
;;;1373   //                    
;;;1374   //                    bit = 2;
;;;1375   //                    break;
;;;1376   //                }
;;;1377   //                case 2:
;;;1378   //                {
;;;1379   //                    strcat(set_limit,num);            
;;;1380   //                    TEXT_SetText(hItem,set_limit);
;;;1381   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1382   //                    {
;;;1383   //                        dot_flag = 1;
;;;1384   //                    }else{
;;;1385   //                        set_load_cutoffv = set_load_cutoffv * 10 + atoi(num) * 1000;
;;;1386   //                    }
;;;1387   //                    bit = 3;
;;;1388   //                    break;
;;;1389   //                }
;;;1390   //                case 3:
;;;1391   //                {
;;;1392   //                    strcat(set_limit,num);
;;;1393   //                    TEXT_SetText(hItem,set_limit);
;;;1394   //                    if(dot_flag == 0)
;;;1395   //                    {
;;;1396   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1397   //                        {                            
;;;1398   //                            dot_flag = 2;
;;;1399   //                        }else{
;;;1400   //                            set_load_cutoffv = 0;
;;;1401   //                        }
;;;1402   //                    }else{
;;;1403   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1404   //                    }                  
;;;1405   //                    bit = 4;
;;;1406   //                    break;
;;;1407   //                }
;;;1408   //                case 4:
;;;1409   //                {
;;;1410   //                    strcat(set_limit,num);
;;;1411   //                    TEXT_SetText(hItem,set_limit);
;;;1412   //                    if(dot_flag == 0)
;;;1413   //                    {
;;;1414   //                        set_load_cutoffv = 0;
;;;1415   //                    }else if(dot_flag == 2){
;;;1416   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1417   //                    }else{
;;;1418   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1419   //                    }                  
;;;1420   //                    bit = 5;
;;;1421   //                    break;
;;;1422   //                }
;;;1423   //                case 5:
;;;1424   //                {
;;;1425   //                    strcat(set_limit,num);
;;;1426   //                    TEXT_SetText(hItem,set_limit);
;;;1427   //                    if(dot_flag == 0)
;;;1428   //                    {
;;;1429   //                        set_load_cutoffv = 0;
;;;1430   //                    }else if(dot_flag == 1){
;;;1431   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1432   //                    }else{
;;;1433   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1434   //                    }                 
;;;1435   //                    bit = 6;
;;;1436   //                    break;
;;;1437   //                }
;;;1438   //                case 6:
;;;1439   //                {
;;;1440   //                    strcat(set_limit,num);
;;;1441   //                    TEXT_SetText(hItem,set_limit);
;;;1442   //                    if(dot_flag == 0)
;;;1443   //                    {
;;;1444   //                        set_load_cutoffv = 0;
;;;1445   //                    }else if(dot_flag == 2){
;;;1446   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1447   //                    }                 
;;;1448   //                    bit = 0;
;;;1449   //                    break;
;;;1450   //                }
;;;1451   //            }
;;;1452               break;
;;;1453               
;;;1454           }
;;;1455           default:break;
;;;1456       }
;;;1457   }
000140  e8bd87f0          POP      {r4-r10,pc}
;;;1458   
                          ENDP

                  |L3.324|
                          DCD      set_sw
                  |L3.328|
                          DCD      ||.data||
                  |L3.332|
                          DCD      set_limit
                  |L3.336|
                          DCD      dot_flag
                  |L3.340|
                          DCD      bit
                  |L3.344|
000158  2e00              DCB      ".",0
00015a  00                DCB      0
00015b  00                DCB      0

                          AREA ||i.LOAD_OP_DOWN||, CODE, READONLY, ALIGN=2

                  LOAD_OP_DOWN PROC
;;;747    void LOAD_OP_DOWN(void);
;;;748    void LOAD_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;749    {
;;;750        switch(set_sw)
000004  4d34              LDR      r5,|L4.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;751        {
;;;752            case set_24:
;;;753            {
;;;754                WM_HWIN hItem;
;;;755                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
000008  4c34              LDR      r4,|L4.220|
;;;756                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00000a  f06f4670          MVN      r6,#0xf0000000
;;;757                TEXT_SetTextColor(hItem, GUI_WHITE);
00000e  1137              ASRS     r7,r6,#4
;;;758                
;;;759                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;760                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000010  f8df90cc          LDR      r9,|L4.224|
000014  6860              LDR      r0,[r4,#4]            ;750
000016  f44f6811          MOV      r8,#0x910             ;759
00001a  2917              CMP      r1,#0x17              ;750
00001c  d023              BEQ      |L4.102|
;;;761                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;762    
;;;763                set_sw = set_66;
;;;764                break;
;;;765            }
;;;766            case set_66:
;;;767            {
;;;768                WM_HWIN hItem;
;;;769                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;770                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;771                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;772                
;;;773                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00001e  f6401a0e          MOV      r10,#0x90e
000022  2941              CMP      r1,#0x41              ;750
000024  d03c              BEQ      |L4.160|
000026  2942              CMP      r1,#0x42              ;750
000028  d11b              BNE      |L4.98|
;;;774                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;775                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;776    
;;;777                set_sw = set_67;
;;;778                break;
;;;779            }
;;;780    		 case set_67:
;;;781            {
;;;782                WM_HWIN hItem;
;;;783                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00002a  4651              MOV      r1,r10
00002c  f7fffffe          BL       WM_GetDialogItem
000030  4680              MOV      r8,r0
;;;784                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000032  4631              MOV      r1,r6
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       TEXT_SetBkColor
;;;785                TEXT_SetTextColor(hItem, GUI_WHITE);
00003a  4639              MOV      r1,r7
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       TEXT_SetTextColor
;;;786                
;;;787                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000042  f6401139          MOV      r1,#0x939
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;788                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4649              MOV      r1,r9
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;789                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;790    
;;;791                set_sw = set_86;
00005e  2055              MOVS     r0,#0x55
000060  7028              STRB     r0,[r5,#0]
                  |L4.98|
;;;792                break;
;;;793            }
;;;794        }   
;;;795    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L4.102|
000066  f640016d          MOV      r1,#0x86d             ;755
00006a  f7fffffe          BL       WM_GetDialogItem
00006e  4682              MOV      r10,r0                ;755
000070  4631              MOV      r1,r6                 ;756
000072  4650              MOV      r0,r10                ;756
000074  f7fffffe          BL       TEXT_SetBkColor
000078  4639              MOV      r1,r7                 ;757
00007a  4650              MOV      r0,r10                ;757
00007c  f7fffffe          BL       TEXT_SetTextColor
000080  4641              MOV      r1,r8                 ;759
000082  6860              LDR      r0,[r4,#4]            ;759  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;759
00008a  4649              MOV      r1,r9                 ;760
00008c  4620              MOV      r0,r4                 ;760
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;761
000094  4620              MOV      r0,r4                 ;761
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2041              MOVS     r0,#0x41              ;763
00009c  7028              STRB     r0,[r5,#0]            ;763
00009e  e7e0              B        |L4.98|
                  |L4.160|
0000a0  4641              MOV      r1,r8                 ;769
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4680              MOV      r8,r0                 ;769
0000a8  4631              MOV      r1,r6                 ;770
0000aa  4640              MOV      r0,r8                 ;770
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4639              MOV      r1,r7                 ;771
0000b2  4640              MOV      r0,r8                 ;771
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4651              MOV      r1,r10                ;773
0000ba  6860              LDR      r0,[r4,#4]            ;773  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;773
0000c2  4649              MOV      r1,r9                 ;774
0000c4  4620              MOV      r0,r4                 ;774
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;775
0000cc  4620              MOV      r0,r4                 ;775
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2042              MOVS     r0,#0x42              ;777
0000d4  7028              STRB     r0,[r5,#0]            ;777
0000d6  e7c4              B        |L4.98|
;;;796    
                          ENDP

                  |L4.216|
                          DCD      set_sw
                  |L4.220|
                          DCD      ||.data||
                  |L4.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_OP_UP||, CODE, READONLY, ALIGN=2

                  LOAD_OP_UP PROC
;;;797    void LOAD_OP_UP(void);
;;;798    void LOAD_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;799    {
;;;800        switch(set_sw)
000004  4d34              LDR      r5,|L5.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;801        {
;;;802            case set_66:
;;;803            {
;;;804                WM_HWIN hItem;
;;;805                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000008  4c34              LDR      r4,|L5.220|
;;;806                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;807                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;808                
;;;809                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;810                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  f8dfa0d4          LDR      r10,|L5.224|
00000e  f44f6611          MOV      r6,#0x910             ;805
000012  6860              LDR      r0,[r4,#4]            ;800
000014  f06f4870          MVN      r8,#0xf0000000        ;806
000018  f06f497f          MVN      r9,#0xff000000        ;807
00001c  2941              CMP      r1,#0x41              ;800
00001e  d022              BEQ      |L5.102|
;;;811                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;812    
;;;813                set_sw = set_24;
;;;814                break;
;;;815            }
;;;816            case set_67:
;;;817            {
;;;818                WM_HWIN hItem;
;;;819                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000020  1eb7              SUBS     r7,r6,#2
000022  2942              CMP      r1,#0x42              ;800
000024  d03c              BEQ      |L5.160|
000026  2955              CMP      r1,#0x55              ;800
000028  d11b              BNE      |L5.98|
;;;820                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;821                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;822                
;;;823                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;824                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;825                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;826    
;;;827                set_sw = set_66;
;;;828                break;
;;;829            }
;;;830    		case set_86:
;;;831            {
;;;832                WM_HWIN hItem;
;;;833                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00002a  f6401139          MOV      r1,#0x939
00002e  f7fffffe          BL       WM_GetDialogItem
000032  4606              MOV      r6,r0
;;;834                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000034  4641              MOV      r1,r8
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       TEXT_SetBkColor
;;;835                TEXT_SetTextColor(hItem, GUI_WHITE);
00003c  4649              MOV      r1,r9
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       TEXT_SetTextColor
;;;836                
;;;837                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000044  4639              MOV      r1,r7
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;838                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4651              MOV      r1,r10
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;839                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;840    
;;;841                set_sw = set_67;
00005e  2042              MOVS     r0,#0x42
000060  7028              STRB     r0,[r5,#0]
                  |L5.98|
;;;842                break;
;;;843            }
;;;844        }   
;;;845    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L5.102|
000066  4631              MOV      r1,r6                 ;805
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0                 ;805
00006e  4641              MOV      r1,r8                 ;806
000070  4630              MOV      r0,r6                 ;806
000072  f7fffffe          BL       TEXT_SetBkColor
000076  4649              MOV      r1,r9                 ;807
000078  4630              MOV      r0,r6                 ;807
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  f640016d          MOV      r1,#0x86d             ;809
000082  6860              LDR      r0,[r4,#4]            ;809  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;809
00008a  4651              MOV      r1,r10                ;810
00008c  4620              MOV      r0,r4                 ;810
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;811
000094  4620              MOV      r0,r4                 ;811
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2017              MOVS     r0,#0x17              ;813
00009c  7028              STRB     r0,[r5,#0]            ;813
00009e  e7e0              B        |L5.98|
                  |L5.160|
0000a0  4639              MOV      r1,r7                 ;819
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4607              MOV      r7,r0                 ;819
0000a8  4641              MOV      r1,r8                 ;820
0000aa  4638              MOV      r0,r7                 ;820
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4649              MOV      r1,r9                 ;821
0000b2  4638              MOV      r0,r7                 ;821
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4631              MOV      r1,r6                 ;823
0000ba  6860              LDR      r0,[r4,#4]            ;823  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;823
0000c2  4651              MOV      r1,r10                ;824
0000c4  4620              MOV      r0,r4                 ;824
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;825
0000cc  4620              MOV      r0,r4                 ;825
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2041              MOVS     r0,#0x41              ;827
0000d4  7028              STRB     r0,[r5,#0]            ;827
0000d6  e7c4              B        |L5.98|
;;;846    
                          ENDP

                  |L5.216|
                          DCD      set_sw
                  |L5.220|
                          DCD      ||.data||
                  |L5.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  LOAD_SET PROC
;;;848    void LOAD_SET(void);
;;;849    void LOAD_SET(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;850        char    buf[6];
;;;851        float   dis_load_c;
;;;852        float   dis_load_v;
;;;853        vu8 i;
;;;854        switch(set_sw)
00000a  4dfd              LDR      r5,|L6.1024|
00000c  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;855        {
;;;856            case set_24:
;;;857            {
;;;858                WM_HWIN hItem;
;;;859    //            WM_InvalidateWindow(load_wind);
;;;860                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;861                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;862                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;863                       
;;;864                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;865                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;866                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;867                for(i=0;i<6;i++)
;;;868                {
;;;869                    set_limit[i] = '\0';
;;;870                }
;;;871                set_sw = set_25;
;;;872                break;
;;;873            }
;;;874            case set_25:
;;;875            {
;;;876                WM_HWIN hItem;
;;;877    //            WM_InvalidateWindow(lo\\JK_BTSET\../drive/AD7689.c\AD7689_Bufferad_wind);
;;;878                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;879                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;880                TEXT_SetTextColor(hItem, GUI_WHITE);  
;;;881    			if(dot_flag == 0){
;;;882    				load_c = atoi(set_limit)*1000;					
;;;883    			}else if(dot_flag != 0){
;;;884    				memset(buf, '\0', sizeof(buf));
;;;885    				strncpy(buf,set_limit,dot_flag + 4);
;;;886    				load_c = atof(buf)*1000;
00000e  ed9f8bfd          VLDR     d8,|L6.1028|
;;;887    			}
;;;888    			if(load_c > 30000 || (float)load_c/1000 * DISS_Voltage > 500){
;;;889                    load_c = 0;
;;;890                }
;;;891    //			if(load_c > 2500)
;;;892    //			{
;;;893    //				C_SW(1);
;;;894    //			}else{
;;;895    //				C_SW(0);
;;;896    //			}
;;;897                SET_Current_Laod = load_c;            
;;;898    //            if(load_c > 3000)
;;;899    //			{
;;;900    //				C_SW(1);
;;;901    //			}else{
;;;902    //				C_SW(0);
;;;903    //			}
;;;904                dis_load_c = (float)SET_Current_Laod/1000;
;;;905                sprintf(buf,"%.3f",dis_load_c);
;;;906                TEXT_SetText(hItem,buf);
;;;907                
;;;908                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;909                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;910                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;911                Write_Limits();
;;;912                
;;;913                set_sw = set_24;
;;;914                bit = 0;
000012  4ffe              LDR      r7,|L6.1036|
;;;915                dot_flag = 0;
;;;916                break;
;;;917            }
;;;918            case set_66:
;;;919            {
;;;920                WM_HWIN hItem;
;;;921    //            WM_InvalidateWindow(load_wind);
;;;922                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;923                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;924                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;925                       
;;;926                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
000014  f6401a11          MOV      r10,#0x911
000018  4afd              LDR      r2,|L6.1040|
00001a  ed9f9afe          VLDR     s18,|L6.1044|
00001e  f8df83f8          LDR      r8,|L6.1048|
000022  f8dfb3f8          LDR      r11,|L6.1052|
000026  2400              MOVS     r4,#0                 ;869
000028  4efd              LDR      r6,|L6.1056|
00002a  6850              LDR      r0,[r2,#4]            ;854
00002c  2942              CMP      r1,#0x42              ;854
00002e  d07d              BEQ      |L6.300|
000030  dc26              BGT      |L6.128|
000032  f640096e          MOV      r9,#0x86e             ;864
000036  2917              CMP      r1,#0x17              ;854
000038  d079              BEQ      |L6.302|
00003a  2918              CMP      r1,#0x18              ;854
00003c  d078              BEQ      |L6.304|
00003e  2941              CMP      r1,#0x41              ;854
000040  d177              BNE      |L6.306|
000042  f44f6111          MOV      r1,#0x910             ;922
000046  4616              MOV      r6,r2                 ;922
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4607              MOV      r7,r0                 ;922
00004e  f06f4170          MVN      r1,#0xf0000000        ;923
000052  4638              MOV      r0,r7                 ;923
000054  f7fffffe          BL       TEXT_SetBkColor
000058  f06f417f          MVN      r1,#0xff000000        ;924
00005c  4638              MOV      r0,r7                 ;924
00005e  f7fffffe          BL       TEXT_SetTextColor
000062  4651              MOV      r1,r10
000064  6870              LDR      r0,[r6,#4]  ; load_wind
000066  f7fffffe          BL       WM_GetDialogItem
00006a  4606              MOV      r6,r0
;;;927                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00006c  49ed              LDR      r1,|L6.1060|
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       TEXT_SetBkColor
;;;928                TEXT_SetTextColor(hItem, GUI_BLACK);
000074  2100              MOVS     r1,#0
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       TEXT_SetTextColor
;;;929                for(i=0;i<6;i++)
00007c  9400              STR      r4,[sp,#0]
00007e  e126              B        |L6.718|
                  |L6.128|
000080  2943              CMP      r1,#0x43              ;854
000082  d07d              BEQ      |L6.384|
;;;930                {
;;;931                    set_limit[i] = '\0';
;;;932                }
;;;933                set_sw = set_68;
;;;934                break;
;;;935            }
;;;936            case set_68:
;;;937            {
;;;938                WM_HWIN hItem;
;;;939                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;940                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;941                TEXT_SetTextColor(hItem, GUI_WHITE); 
;;;942    			if(dot_flag == 0){
;;;943    				load_v = atoi(set_limit)*1000;					
;;;944    			}else if(dot_flag != 0){
;;;945    				memset(buf, '\0', sizeof(buf));
;;;946    				strncpy(buf,set_limit,dot_flag + 4);
;;;947    				load_v = atof(buf)*1000;
;;;948    			}
;;;949    			if(load_v > 80000 || (float)load_v/1000 * DISS_Current > 200){
;;;950                    load_v = 0;
;;;951                }
;;;952                SET_Voltage_Laod = load_v;          
;;;953                
;;;954                dis_load_v = (float)SET_Voltage_Laod/1000;
;;;955                sprintf(buf,"%.3f",dis_load_v);
;;;956                TEXT_SetText(hItem,buf);
;;;957                
;;;958                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;959                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;960                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;961                Write_Limits();
;;;962                
;;;963                set_sw = set_66;
;;;964                bit = 0;
;;;965                dot_flag = 0;
;;;966                break;
;;;967            }
;;;968            case set_67:
;;;969            {
;;;970                switch(flag_Load_CC)
;;;971                {
;;;972                    case 1:
;;;973                    {
;;;974                        WM_HWIN hItem;
;;;975                        hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;976                        TEXT_SetText(hItem,"CV");
;;;977    					flag_Load_CC = 0;
;;;978                        GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV                  
;;;979                        load_mode = 0;
;;;980                        Write_LOAD();
;;;981                        break;
;;;982                    }
;;;983                    case 0:
;;;984                    {
;;;985                         WM_HWIN hItem;
;;;986                         hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;987                         TEXT_SetText(hItem,"CC");
;;;988    					 flag_Load_CC = 1;
;;;989                         GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC                   
;;;990                         load_mode =1;
;;;991                         Write_LOAD();
;;;992                         break;
;;;993                    }
;;;994                }   
;;;995            }break;
;;;996    		case set_86:
;;;997            {
;;;998                WM_HWIN hItem;
;;;999    //            WM_InvalidateWindow(load_wind);
;;;1000               hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000084  f6401a39          MOV      r10,#0x939
;;;1001               TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;1002               TEXT_SetTextColor(hItem, GUI_WHITE);
;;;1003                      
;;;1004               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000088  f640182d          MOV      r8,#0x92d
00008c  2955              CMP      r1,#0x55              ;854
00008e  d078              BEQ      |L6.386|
000090  2956              CMP      r1,#0x56              ;854
000092  d15e              BNE      |L6.338|
;;;1005               TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;1006               TEXT_SetTextColor(hItem, GUI_BLACK);
;;;1007               for(i=0;i<6;i++)
;;;1008               {
;;;1009                   set_limit[i] = '\0';
;;;1010               }
;;;1011               set_sw = set_87;
;;;1012               break;
;;;1013           }
;;;1014           case set_87:
;;;1015           {
;;;1016               WM_HWIN hItem;
;;;1017               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000094  4641              MOV      r1,r8
000096  4691              MOV      r9,r2
000098  f7fffffe          BL       WM_GetDialogItem
00009c  4683              MOV      r11,r0
;;;1018               TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00009e  f06f4170          MVN      r1,#0xf0000000
0000a2  4658              MOV      r0,r11
0000a4  f7fffffe          BL       TEXT_SetBkColor
;;;1019               TEXT_SetTextColor(hItem, GUI_WHITE); 
0000a8  f06f417f          MVN      r1,#0xff000000
0000ac  4658              MOV      r0,r11
0000ae  f7fffffe          BL       TEXT_SetTextColor
;;;1020   			if(dot_flag == 0){
0000b2  7830              LDRB     r0,[r6,#0]  ; dot_flag
;;;1021   				set_load_cutoffv = atoi(set_limit)*1000;					
0000b4  f8df8370          LDR      r8,|L6.1064|
0000b8  2800              CMP      r0,#0                 ;1020
0000ba  d071              BEQ      |L6.416|
;;;1022   			}else if(dot_flag != 0){
0000bc  7830              LDRB     r0,[r6,#0]  ; dot_flag
0000be  b1a0              CBZ      r0,|L6.234|
;;;1023   				memset(buf, '\0', sizeof(buf));
0000c0  9401              STR      r4,[sp,#4]
0000c2  9402              STR      r4,[sp,#8]
;;;1024   				strncpy(buf,set_limit,dot_flag + 4);
0000c4  7832              LDRB     r2,[r6,#0]  ; dot_flag
0000c6  49d5              LDR      r1,|L6.1052|
0000c8  1d12              ADDS     r2,r2,#4
0000ca  a801              ADD      r0,sp,#4
0000cc  f7fffffe          BL       strncpy
;;;1025   				set_load_cutoffv = atof(buf)*1000;
0000d0  a801              ADD      r0,sp,#4
0000d2  f7fffffe          BL       __hardfp_atof
0000d6  ec532b18          VMOV     r2,r3,d8
0000da  ec510b10          VMOV     r0,r1,d0
0000de  f7fffffe          BL       __aeabi_dmul
0000e2  f7fffffe          BL       __aeabi_d2iz
0000e6  f8c80010          STR      r0,[r8,#0x10]  ; InFlashSave
                  |L6.234|
;;;1026   			}
;;;1027               load_cutoffv = (float)set_load_cutoffv/1000;
0000ea  ed980a04          VLDR     s0,[r8,#0x10]
0000ee  eef80ac0          VCVT.F32.S32 s1,s0
0000f2  ee800a89          VDIV.F32 s0,s1,s18
0000f6  ed890a02          VSTR     s0,[r9,#8]
;;;1028               sprintf(buf,"%.3f",load_cutoffv);
0000fa  ee100a10          VMOV     r0,s0
0000fe  f7fffffe          BL       __aeabi_f2d
000102  ec410b10          VMOV     d0,r0,r1
000106  a1c9              ADR      r1,|L6.1068|
000108  ec532b10          VMOV     r2,r3,d0
00010c  a801              ADD      r0,sp,#4
00010e  f7fffffe          BL       __2sprintf
;;;1029               TEXT_SetText(hItem,buf);
000112  a901              ADD      r1,sp,#4
000114  4658              MOV      r0,r11
000116  f7fffffe          BL       TEXT_SetText
;;;1030               
;;;1031               hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00011a  4651              MOV      r1,r10
00011c  f8d90004          LDR      r0,[r9,#4]  ; load_wind
000120  f7fffffe          BL       WM_GetDialogItem
000124  4680              MOV      r8,r0
;;;1032               TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000126  49bf              LDR      r1,|L6.1060|
000128  4640              MOV      r0,r8
00012a  e003              B        |L6.308|
                  |L6.300|
00012c  e154              B        |L6.984|
                  |L6.302|
00012e  e015              B        |L6.348|
                  |L6.304|
000130  e046              B        |L6.448|
                  |L6.306|
000132  e00e              B        |L6.338|
                  |L6.308|
000134  f7fffffe          BL       TEXT_SetBkColor
;;;1033               TEXT_SetTextColor(hItem, GUI_BLACK);
000138  2100              MOVS     r1,#0
00013a  4640              MOV      r0,r8
00013c  f7fffffe          BL       TEXT_SetTextColor
;;;1034               Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
000140  4ab9              LDR      r2,|L6.1064|
000142  2128              MOVS     r1,#0x28
000144  48bb              LDR      r0,|L6.1076|
000146  f7fffffe          BL       Flash_Write32BitDatas
;;;1035               
;;;1036               set_sw = set_86;
00014a  2055              MOVS     r0,#0x55
00014c  7028              STRB     r0,[r5,#0]
;;;1037               bit = 0;
00014e  703c              STRB     r4,[r7,#0]
;;;1038               dot_flag = 0;
000150  7034              STRB     r4,[r6,#0]
                  |L6.338|
;;;1039               break;
;;;1040           }
;;;1041       }
;;;1042   }
000152  b003              ADD      sp,sp,#0xc
000154  ecbd8b04          VPOP     {d8-d9}
000158  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.348|
00015c  f640016d          MOV      r1,#0x86d             ;860
000160  4616              MOV      r6,r2                 ;860
000162  f7fffffe          BL       WM_GetDialogItem
000166  4607              MOV      r7,r0                 ;860
000168  f06f4170          MVN      r1,#0xf0000000        ;861
00016c  4638              MOV      r0,r7                 ;861
00016e  f7fffffe          BL       TEXT_SetBkColor
000172  f06f417f          MVN      r1,#0xff000000        ;862
000176  4638              MOV      r0,r7                 ;862
000178  f7fffffe          BL       TEXT_SetTextColor
00017c  4649              MOV      r1,r9                 ;864
00017e  e001              B        |L6.388|
                  |L6.384|
000180  e0ac              B        |L6.732|
                  |L6.386|
000182  e189              B        |L6.1176|
                  |L6.388|
000184  6870              LDR      r0,[r6,#4]            ;864  ; load_wind
000186  f7fffffe          BL       WM_GetDialogItem
00018a  4606              MOV      r6,r0                 ;864
00018c  49a5              LDR      r1,|L6.1060|
00018e  4630              MOV      r0,r6                 ;865
000190  f7fffffe          BL       TEXT_SetBkColor
000194  2100              MOVS     r1,#0                 ;866
000196  4630              MOV      r0,r6                 ;866
000198  f7fffffe          BL       TEXT_SetTextColor
00019c  9400              STR      r4,[sp,#0]            ;867
00019e  e008              B        |L6.434|
                  |L6.416|
0001a0  e1a7              B        |L6.1266|
                  |L6.418|
0001a2  f89d0000          LDRB     r0,[sp,#0]            ;869
0001a6  f80b4000          STRB     r4,[r11,r0]           ;869
0001aa  f89d0000          LDRB     r0,[sp,#0]            ;867
0001ae  1c40              ADDS     r0,r0,#1              ;867
0001b0  9000              STR      r0,[sp,#0]            ;867
                  |L6.434|
0001b2  f89d0000          LDRB     r0,[sp,#0]            ;867
0001b6  2806              CMP      r0,#6                 ;867
0001b8  d3f3              BCC      |L6.418|
0001ba  2018              MOVS     r0,#0x18              ;871
0001bc  7028              STRB     r0,[r5,#0]            ;871
0001be  e7c8              B        |L6.338|
                  |L6.448|
0001c0  4649              MOV      r1,r9                 ;878
0001c2  4691              MOV      r9,r2                 ;878
0001c4  f7fffffe          BL       WM_GetDialogItem
0001c8  4682              MOV      r10,r0                ;878
0001ca  f06f4170          MVN      r1,#0xf0000000        ;879
0001ce  4650              MOV      r0,r10                ;879
0001d0  f7fffffe          BL       TEXT_SetBkColor
0001d4  f06f417f          MVN      r1,#0xff000000        ;880
0001d8  4650              MOV      r0,r10                ;880
0001da  f7fffffe          BL       TEXT_SetTextColor
0001de  7830              LDRB     r0,[r6,#0]            ;881  ; dot_flag
0001e0  b3e8              CBZ      r0,|L6.606|
0001e2  7830              LDRB     r0,[r6,#0]            ;883  ; dot_flag
0001e4  b1a0              CBZ      r0,|L6.528|
0001e6  9401              STR      r4,[sp,#4]            ;884
0001e8  9402              STR      r4,[sp,#8]            ;884
0001ea  7832              LDRB     r2,[r6,#0]            ;885  ; dot_flag
0001ec  498b              LDR      r1,|L6.1052|
0001ee  1d12              ADDS     r2,r2,#4              ;885
0001f0  a801              ADD      r0,sp,#4              ;885
0001f2  f7fffffe          BL       strncpy
0001f6  a801              ADD      r0,sp,#4              ;886
0001f8  f7fffffe          BL       __hardfp_atof
0001fc  ec532b18          VMOV     r2,r3,d8              ;886
000200  ec510b10          VMOV     r0,r1,d0              ;886
000204  f7fffffe          BL       __aeabi_dmul
000208  f7fffffe          BL       __aeabi_d2uiz
00020c  f8c80094          STR      r0,[r8,#0x94]         ;886  ; Run_Control
                  |L6.528|
000210  f8d80094          LDR      r0,[r8,#0x94]         ;888  ; Run_Control
000214  f2475130          MOV      r1,#0x7530            ;888
000218  4288              CMP      r0,r1                 ;888
00021a  d811              BHI      |L6.576|
00021c  f8d80094          LDR      r0,[r8,#0x94]         ;888  ; Run_Control
000220  4986              LDR      r1,|L6.1084|
000222  ee000a10          VMOV     s0,r0                 ;888
000226  4884              LDR      r0,|L6.1080|
000228  eef80a40          VCVT.F32.U32 s1,s0                 ;888
00022c  ee800a89          VDIV.F32 s0,s1,s18             ;888
000230  edd00a00          VLDR     s1,[r0,#0]            ;888
000234  ee200a20          VMUL.F32 s0,s0,s1              ;888
000238  ee100a10          VMOV     r0,s0                 ;888
00023c  4288              CMP      r0,r1                 ;888
00023e  dd01              BLE      |L6.580|
                  |L6.576|
000240  f8c84094          STR      r4,[r8,#0x94]         ;889  ; Run_Control
                  |L6.580|
000244  f8d80094          LDR      r0,[r8,#0x94]         ;897  ; Run_Control
000248  f8c80010          STR      r0,[r8,#0x10]         ;897  ; Run_Control
00024c  f8d80010          LDR      r0,[r8,#0x10]         ;904  ; Run_Control
000250  ee000a10          VMOV     s0,r0                 ;904
000254  eef80a40          VCVT.F32.U32 s1,s0                 ;904
000258  ee800a89          VDIV.F32 s0,s1,s18             ;904
00025c  e000              B        |L6.608|
                  |L6.606|
00025e  e025              B        |L6.684|
                  |L6.608|
000260  ee100a10          VMOV     r0,s0                 ;905
000264  f7fffffe          BL       __aeabi_f2d
000268  ec410b10          VMOV     d0,r0,r1              ;905
00026c  a16f              ADR      r1,|L6.1068|
00026e  ec532b10          VMOV     r2,r3,d0              ;905
000272  a801              ADD      r0,sp,#4              ;905
000274  f7fffffe          BL       __2sprintf
000278  a901              ADD      r1,sp,#4              ;906
00027a  4650              MOV      r0,r10                ;906
00027c  f7fffffe          BL       TEXT_SetText
000280  f640016d          MOV      r1,#0x86d             ;908
000284  f8d90004          LDR      r0,[r9,#4]            ;908  ; load_wind
000288  f7fffffe          BL       WM_GetDialogItem
00028c  4680              MOV      r8,r0                 ;908
00028e  4965              LDR      r1,|L6.1060|
000290  4640              MOV      r0,r8                 ;909
000292  f7fffffe          BL       TEXT_SetBkColor
000296  2100              MOVS     r1,#0                 ;910
000298  4640              MOV      r0,r8                 ;910
00029a  f7fffffe          BL       TEXT_SetTextColor
00029e  f7fffffe          BL       Write_Limits
0002a2  2017              MOVS     r0,#0x17              ;913
0002a4  7028              STRB     r0,[r5,#0]            ;913
0002a6  703c              STRB     r4,[r7,#0]            ;914
0002a8  7034              STRB     r4,[r6,#0]            ;915
0002aa  e752              B        |L6.338|
                  |L6.684|
0002ac  485b              LDR      r0,|L6.1052|
0002ae  f7fffffe          BL       atoi
0002b2  f44f717a          MOV      r1,#0x3e8             ;882
0002b6  4348              MULS     r0,r1,r0              ;882
0002b8  f8c80094          STR      r0,[r8,#0x94]         ;882  ; Run_Control
0002bc  e7a8              B        |L6.528|
                  |L6.702|
0002be  f89d0000          LDRB     r0,[sp,#0]            ;931
0002c2  f80b4000          STRB     r4,[r11,r0]           ;931
0002c6  f89d0000          LDRB     r0,[sp,#0]            ;929
0002ca  1c40              ADDS     r0,r0,#1              ;929
0002cc  9000              STR      r0,[sp,#0]            ;929
                  |L6.718|
0002ce  f89d0000          LDRB     r0,[sp,#0]            ;929
0002d2  2806              CMP      r0,#6                 ;929
0002d4  d3f3              BCC      |L6.702|
0002d6  2043              MOVS     r0,#0x43              ;933
0002d8  7028              STRB     r0,[r5,#0]            ;933
0002da  e73a              B        |L6.338|
                  |L6.732|
0002dc  4651              MOV      r1,r10                ;939
0002de  4691              MOV      r9,r2                 ;939
0002e0  f7fffffe          BL       WM_GetDialogItem
0002e4  4682              MOV      r10,r0                ;939
0002e6  f06f4170          MVN      r1,#0xf0000000        ;940
0002ea  4650              MOV      r0,r10                ;940
0002ec  f7fffffe          BL       TEXT_SetBkColor
0002f0  f06f417f          MVN      r1,#0xff000000        ;941
0002f4  4650              MOV      r0,r10                ;941
0002f6  f7fffffe          BL       TEXT_SetTextColor
0002fa  7830              LDRB     r0,[r6,#0]            ;942  ; dot_flag
0002fc  b3f0              CBZ      r0,|L6.892|
0002fe  7830              LDRB     r0,[r6,#0]            ;944  ; dot_flag
000300  b1a0              CBZ      r0,|L6.812|
000302  9401              STR      r4,[sp,#4]            ;945
000304  9402              STR      r4,[sp,#8]            ;945
000306  7832              LDRB     r2,[r6,#0]            ;946  ; dot_flag
000308  4944              LDR      r1,|L6.1052|
00030a  1d12              ADDS     r2,r2,#4              ;946
00030c  a801              ADD      r0,sp,#4              ;946
00030e  f7fffffe          BL       strncpy
000312  a801              ADD      r0,sp,#4              ;947
000314  f7fffffe          BL       __hardfp_atof
000318  ec532b18          VMOV     r2,r3,d8              ;947
00031c  ec510b10          VMOV     r0,r1,d0              ;947
000320  f7fffffe          BL       __aeabi_dmul
000324  f7fffffe          BL       __aeabi_d2uiz
000328  f8c800a4          STR      r0,[r8,#0xa4]         ;947  ; Run_Control
                  |L6.812|
00032c  f8d800a4          LDR      r0,[r8,#0xa4]         ;949  ; Run_Control
000330  4943              LDR      r1,|L6.1088|
000332  4288              CMP      r0,r1                 ;949
000334  d811              BHI      |L6.858|
000336  f8d800a4          LDR      r0,[r8,#0xa4]         ;949  ; Run_Control
00033a  4943              LDR      r1,|L6.1096|
00033c  ee000a10          VMOV     s0,r0                 ;949
000340  4840              LDR      r0,|L6.1092|
000342  eef80a40          VCVT.F32.U32 s1,s0                 ;949
000346  ee800a89          VDIV.F32 s0,s1,s18             ;949
00034a  edd00a00          VLDR     s1,[r0,#0]            ;949
00034e  ee200a20          VMUL.F32 s0,s0,s1              ;949
000352  ee100a10          VMOV     r0,s0                 ;949
000356  4288              CMP      r0,r1                 ;949
000358  dd01              BLE      |L6.862|
                  |L6.858|
00035a  f8c840a4          STR      r4,[r8,#0xa4]         ;950  ; Run_Control
                  |L6.862|
00035e  f8d800a4          LDR      r0,[r8,#0xa4]         ;952  ; Run_Control
000362  f8c8000c          STR      r0,[r8,#0xc]          ;952  ; Run_Control
000366  f8d8000c          LDR      r0,[r8,#0xc]          ;954  ; Run_Control
00036a  ee000a10          VMOV     s0,r0                 ;954
00036e  eef80a40          VCVT.F32.U32 s1,s0                 ;954
000372  ee800a89          VDIV.F32 s0,s1,s18             ;954
000376  ee100a10          VMOV     r0,s0                 ;955
00037a  e000              B        |L6.894|
                  |L6.892|
00037c  e023              B        |L6.966|
                  |L6.894|
00037e  f7fffffe          BL       __aeabi_f2d
000382  ec410b10          VMOV     d0,r0,r1              ;955
000386  a129              ADR      r1,|L6.1068|
000388  ec532b10          VMOV     r2,r3,d0              ;955
00038c  a801              ADD      r0,sp,#4              ;955
00038e  f7fffffe          BL       __2sprintf
000392  a901              ADD      r1,sp,#4              ;956
000394  4650              MOV      r0,r10                ;956
000396  f7fffffe          BL       TEXT_SetText
00039a  f44f6111          MOV      r1,#0x910             ;958
00039e  f8d90004          LDR      r0,[r9,#4]            ;958  ; load_wind
0003a2  f7fffffe          BL       WM_GetDialogItem
0003a6  4680              MOV      r8,r0                 ;958
0003a8  491e              LDR      r1,|L6.1060|
0003aa  4640              MOV      r0,r8                 ;959
0003ac  f7fffffe          BL       TEXT_SetBkColor
0003b0  2100              MOVS     r1,#0                 ;960
0003b2  4640              MOV      r0,r8                 ;960
0003b4  f7fffffe          BL       TEXT_SetTextColor
0003b8  f7fffffe          BL       Write_Limits
0003bc  2041              MOVS     r0,#0x41              ;963
0003be  7028              STRB     r0,[r5,#0]            ;963
0003c0  703c              STRB     r4,[r7,#0]            ;964
0003c2  7034              STRB     r4,[r6,#0]            ;965
                  |L6.964|
0003c4  e6c5              B        |L6.338|
                  |L6.966|
0003c6  4815              LDR      r0,|L6.1052|
0003c8  f7fffffe          BL       atoi
0003cc  f44f717a          MOV      r1,#0x3e8             ;943
0003d0  4348              MULS     r0,r1,r0              ;943
0003d2  f8c800a4          STR      r0,[r8,#0xa4]         ;943  ; Run_Control
0003d6  e7a9              B        |L6.812|
                  |L6.984|
0003d8  4d1c              LDR      r5,|L6.1100|
0003da  4f1d              LDR      r7,|L6.1104|
0003dc  f44f6680          MOV      r6,#0x400             ;978
0003e0  7829              LDRB     r1,[r5,#0]            ;970  ; flagD
0003e2  f3c113c0          UBFX     r3,r1,#7,#1           ;970
0003e6  f640110f          MOV      r1,#0x90f             ;975
0003ea  b3ab              CBZ      r3,|L6.1112|
0003ec  2b01              CMP      r3,#1                 ;970
0003ee  d1e9              BNE      |L6.964|
0003f0  4690              MOV      r8,r2                 ;975
0003f2  f7fffffe          BL       WM_GetDialogItem
0003f6  a117              ADR      r1,|L6.1108|
0003f8  f7fffffe          BL       TEXT_SetText
0003fc  6828              LDR      r0,[r5,#0]            ;977  ; flagD
0003fe  e02c              B        |L6.1114|
                  |L6.1024|
                          DCD      set_sw
                  |L6.1028|
000404  00000000          DCFD     0x408f400000000000 ; 1000
000408  408f4000
                  |L6.1036|
                          DCD      bit
                  |L6.1040|
                          DCD      ||.data||
                  |L6.1044|
000414  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1048|
                          DCD      Run_Control
                  |L6.1052|
                          DCD      set_limit
                  |L6.1056|
                          DCD      dot_flag
                  |L6.1060|
                          DCD      0x00bfffff
                  |L6.1064|
                          DCD      InFlashSave
                  |L6.1068|
00042c  252e3366          DCB      "%.3f",0
000430  00      
000431  00                DCB      0
000432  00                DCB      0
000433  00                DCB      0
                  |L6.1076|
                          DCD      0x080e0000
                  |L6.1080|
                          DCD      DISS_Voltage
                  |L6.1084|
                          DCD      0x43fa0000
                  |L6.1088|
                          DCD      0x00013880
                  |L6.1092|
                          DCD      DISS_Current
                  |L6.1096|
                          DCD      0x43480000
                  |L6.1100|
                          DCD      flagD
                  |L6.1104|
                          DCD      0x40020800
                  |L6.1108|
000454  435600            DCB      "CV",0
000457  00                DCB      0
                  |L6.1112|
000458  e00b              B        |L6.1138|
                  |L6.1114|
00045a  f0200080          BIC      r0,r0,#0x80           ;977
00045e  6028              STR      r0,[r5,#0]            ;977  ; flagD
000460  4631              MOV      r1,r6                 ;978
000462  4638              MOV      r0,r7                 ;978
000464  f7fffffe          BL       GPIO_ResetBits
000468  f8884002          STRB     r4,[r8,#2]            ;979
00046c  f7fffffe          BL       Write_LOAD
000470  e66f              B        |L6.338|
                  |L6.1138|
000472  4614              MOV      r4,r2                 ;986
000474  f7fffffe          BL       WM_GetDialogItem
000478  a122              ADR      r1,|L6.1284|
00047a  f7fffffe          BL       TEXT_SetText
00047e  6828              LDR      r0,[r5,#0]            ;988  ; flagD
000480  f0400080          ORR      r0,r0,#0x80           ;988
000484  6028              STR      r0,[r5,#0]            ;988  ; flagD
000486  4631              MOV      r1,r6                 ;989
000488  4638              MOV      r0,r7                 ;989
00048a  f7fffffe          BL       GPIO_SetBits
00048e  2001              MOVS     r0,#1                 ;990
000490  70a0              STRB     r0,[r4,#2]            ;990
000492  f7fffffe          BL       Write_LOAD
000496  e65c              B        |L6.338|
                  |L6.1176|
000498  4651              MOV      r1,r10                ;1000
00049a  4616              MOV      r6,r2                 ;1000
00049c  f7fffffe          BL       WM_GetDialogItem
0004a0  4607              MOV      r7,r0                 ;1000
0004a2  f06f4170          MVN      r1,#0xf0000000        ;1001
0004a6  4638              MOV      r0,r7                 ;1001
0004a8  f7fffffe          BL       TEXT_SetBkColor
0004ac  f06f417f          MVN      r1,#0xff000000        ;1002
0004b0  4638              MOV      r0,r7                 ;1002
0004b2  f7fffffe          BL       TEXT_SetTextColor
0004b6  4641              MOV      r1,r8                 ;1004
0004b8  6870              LDR      r0,[r6,#4]            ;1004  ; load_wind
0004ba  f7fffffe          BL       WM_GetDialogItem
0004be  4606              MOV      r6,r0                 ;1004
0004c0  4911              LDR      r1,|L6.1288|
0004c2  4630              MOV      r0,r6                 ;1005
0004c4  f7fffffe          BL       TEXT_SetBkColor
0004c8  2100              MOVS     r1,#0                 ;1006
0004ca  4630              MOV      r0,r6                 ;1006
0004cc  f7fffffe          BL       TEXT_SetTextColor
0004d0  9400              STR      r4,[sp,#0]            ;1007
0004d2  e007              B        |L6.1252|
                  |L6.1236|
0004d4  f89d0000          LDRB     r0,[sp,#0]            ;1009
0004d8  f80b4000          STRB     r4,[r11,r0]           ;1009
0004dc  f89d0000          LDRB     r0,[sp,#0]            ;1007
0004e0  1c40              ADDS     r0,r0,#1              ;1007
0004e2  9000              STR      r0,[sp,#0]            ;1007
                  |L6.1252|
0004e4  f89d0000          LDRB     r0,[sp,#0]            ;1007
0004e8  2806              CMP      r0,#6                 ;1007
0004ea  d3f3              BCC      |L6.1236|
0004ec  2056              MOVS     r0,#0x56              ;1011
0004ee  7028              STRB     r0,[r5,#0]            ;1011
0004f0  e62f              B        |L6.338|
                  |L6.1266|
0004f2  4806              LDR      r0,|L6.1292|
0004f4  f7fffffe          BL       atoi
0004f8  f44f717a          MOV      r1,#0x3e8             ;1021
0004fc  4348              MULS     r0,r1,r0              ;1021
0004fe  f8c80010          STR      r0,[r8,#0x10]         ;1021  ; InFlashSave
000502  e5f2              B        |L6.234|
;;;1043   void DEL_LOAD(void)
                          ENDP

                  |L6.1284|
000504  434300            DCB      "CC",0
000507  00                DCB      0
                  |L6.1288|
                          DCD      0x00bfffff
                  |L6.1292|
                          DCD      set_limit

                          AREA ||i.ResetLoad||, CODE, READONLY, ALIGN=2

                  ResetLoad PROC
;;;741    
;;;742    WM_HWIN ResetLoad(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;743      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2118              MOVS     r1,#0x18
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; load_wind
;;;744      return load_wind;
;;;745    }
00001c  bd1c              POP      {r2-r4,pc}
;;;746    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog2
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog2||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog2 PROC
;;;101    
;;;102    static void _cbDialog2(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b06          VPUSH    {d8-d10}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;103      WM_HWIN hItem;
;;;104      int     NCode;
;;;105      int     Id;
;;;106      char    buf[6];
;;;107      static vu8 status_flash;
;;;108      static u16 swcount;
;;;109      float   dis_load_c = (float)SET_Current_Laod/1000;
00000c  f8df9400          LDR      r9,|L8.1040|
000010  f8d90010          LDR      r0,[r9,#0x10]  ; Run_Control
000014  ee000a10          VMOV     s0,r0
000018  eeb80a40          VCVT.F32.U32 s0,s0
00001c  eddf9afd          VLDR     s19,|L8.1044|
000020  ee80aa29          VDIV.F32 s20,s0,s19
;;;110      float   dis_load_v = (float)SET_Voltage_Laod/1000;
000024  4648              MOV      r0,r9
000026  68c0              LDR      r0,[r0,#0xc]  ; Run_Control
000028  ee000a10          VMOV     s0,r0
00002c  eeb80a40          VCVT.F32.U32 s0,s0
000030  ee809a29          VDIV.F32 s18,s0,s19
;;;111      static float olvbuff,oldv;
;;;112      static float testc1,testc2,testres;
;;;113      static vu8 testflag;
;;;114      // USER START (Optionally insert additional variables)
;;;115      // USER END
;;;116    
;;;117      switch (pMsg->MsgId) {
;;;118    
;;;119    	case WM_PAINT://无效化重绘
;;;120    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;121            GUI_FillRect(0,25,480,26);//画一条实线
;;;122            GUI_SetColor(GUI_ORANGE);
;;;123            GUI_SetFont(&GUI_Fontsymbol);
;;;124            GUI_UC_SetEncodeUTF8();
;;;125            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;126            if(jkflag == 1)
;;;127    		{
;;;128    			GUI_DispStringAt("Jinko", 5, 1);//SET
;;;129    		}
;;;130            if(lang == 0)
;;;131    		{
;;;132    			GUI_SetColor(GUI_WHITE);
;;;133    			GUI_SetFont(&GUI_FontHZ20S);
;;;134    			GUI_UC_SetEncodeUTF8();
;;;135    			GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;136    			GUI_DispStringAt("测量显示", 130, 3);//SET
;;;137    		}else{
;;;138    			GUI_SetColor(GUI_WHITE);
;;;139    			GUI_SetFont(&GUI_Font20_ASCII);
;;;140    			GUI_DispStringAt("DISPLAY", 130, 3);
;;;141    		}
;;;142    //         GUI_SetFont(&GUI_FontD24x32);//
;;;143    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;144    // 		GUI_DispFloatFix(DISS_Voltage,5,2);//显示电压值
;;;145    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;146    // 		GUI_DispFloatFix(DISS_Current,5,2);//显示电流值
;;;147            GUI_SetFont(&GUI_Font24_1);
;;;148            GUI_DispStringAt("A",450,75);
;;;149            GUI_DispStringAt("V",450,100.);
;;;150            GUI_DispStringAt("V",450,150);
;;;151        
;;;152            GUI_SetFont(&GUI_FontEN40);
;;;153            GUI_SetColor(GUI_LIGHTGRAY);
000034  4ef8              LDR      r6,|L8.1048|
;;;154            GUI_DispStringAt("C:", 28, 190);
;;;155            GUI_SetColor(GUI_LIGHTGRAY);
;;;156            GUI_DispStringAt("m", 217+24, 196);
;;;157            GUI_DispStringAt("AH", 238+24, 187);
;;;158            
;;;159            GUI_SetColor(GUI_GREEN);
;;;160            GUI_SetFont(&GUI_Fontunit);
;;;161            GUI_DispStringAt("°",342, 2);
;;;162            GUI_SetFont(&GUI_Font24_1);
;;;163            GUI_DispStringAt("C",350, 2);
;;;164    //        DrawLock();
;;;165    //        GUI_SetColor(GUI_WHITE);
;;;166    //        GUI_SetFont(&GUI_Fontset_font);
;;;167    //        GUI_DispStringAt("过放电压",290, 150);
;;;168    		break;
;;;169    	case WM_KEY://接受按键消息来处理按键功能
;;;170    		switch (((WM_KEY_INFO*)(pMsg->Data.p))->Key) 
;;;171    		{ 
;;;172    			case GUI_KEY_TAB:
;;;173    
;;;174    			break;
;;;175    			
;;;176    			case GUI_KEY_ENTER:
;;;177    			break;
;;;178    		}
;;;179    	break;
;;;180    		
;;;181    	case WM_TIMER://定时模块消息
;;;182    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime1)
;;;183    	{
;;;184    //        lockstat2 = lockstat1;
;;;185    //        lockstat1 = lock;
;;;186    //        
;;;187    ////        if((vu32)(DISS_Current*1000) > SET_Current_Laod)
;;;188    ////        {
;;;189    ////            testflag = 1;
;;;190    ////        }else{
;;;191    ////            testflag = 0;
;;;192    ////            testc1 = testc2 = 0;
;;;193    ////        }
;;;194    ////        if(testflag == 1)
;;;195    ////        {
;;;196    ////            testc2 = testc1;
;;;197    ////            testc1 = DISS_Current;
;;;198    ////            if(testc1 < testc2)
;;;199    ////            {
;;;200    ////                testres = testc2;
;;;201    ////                testflag = 0;
;;;202    ////                testc1 = testc2 = 0;
;;;203    ////            }
;;;204    ////        }
;;;205    //        
;;;206    //        
;;;207    //        if(lockstat1 != lockstat2)
;;;208    //        {
;;;209    //            WM_InvalidateWindow(load_wind);
;;;210    //        }
;;;211    //         if(clear_flag3 == 1)
;;;212    //         {
;;;213    //		if(cswflag == 1)
;;;214    //		{
;;;215    //			swcount ++;
;;;216    //			if(swcount == 1)
;;;217    //			{
;;;218    //				GPIO_ResetBits(GPIOA,GPIO_Pin_11);//电流切换为低档
;;;219    //			}else if(swcount == 30){
;;;220    //				GPIO_SetBits(GPIOA,GPIO_Pin_11);//电流切换为高档
;;;221    //			}else if(swcount == 60){
;;;222    //				cswflag = 0;
;;;223    //				swcount = 0;
;;;224    //			}
;;;225    //		}
;;;226    		if(lock == 1)
;;;227    		{
;;;228    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
000036  f6401a3d          MOV      r10,#0x93d
;;;229    			TEXT_SetText(hItem,"锁");
;;;230    		}else{
;;;231    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;232    			TEXT_SetText(hItem,"");
;;;233    		}
;;;234    		
;;;235                if(DISS_Voltage < 0.3)
;;;236                {
;;;237                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;238                    sprintf(buf,"%.3f",0.000);       
00003a  ed9f8bf8          VLDR     d8,|L8.1052|
00003e  6820              LDR      r0,[r4,#0]            ;117
000040  4ff8              LDR      r7,|L8.1060|
;;;239                    TEXT_SetText(hItem,buf);
;;;240                }else{                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ;;;241                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;242                    sprintf(buf,"%.3f",disloadv);       
;;;243                    TEXT_SetText(hItem,buf);
;;;244                } 
;;;245    //         }else{
;;;246    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;247    //             sprintf(buf,"%.3f",DISS_Voltage);       
;;;248    //             TEXT_SetText(hItem,buf);
;;;249    //         }
;;;250            if((float)SET_Current_Laod/1000 * DISS_Voltage > 500){
;;;251                SET_Current_Laod = 0;
;;;252                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000042  f8df83e4          LDR      r8,|L8.1064|
000046  f44f457f          MOV      r5,#0xff00            ;159
00004a  f06f4b7f          MVN      r11,#0xff000000       ;120
00004e  281d              CMP      r0,#0x1d              ;117
000050  d07e              BEQ      |L8.336|
000052  dc04              BGT      |L8.94|
000054  280e              CMP      r0,#0xe               ;117
000056  d00b              BEQ      |L8.112|
000058  280f              CMP      r0,#0xf               ;117
00005a  d106              BNE      |L8.106|
00005c  e00d              B        |L8.122|
                  |L8.94|
00005e  2826              CMP      r0,#0x26              ;117
000060  d077              BEQ      |L8.338|
000062  f5a07080          SUB      r0,r0,#0x100          ;117
000066  3813              SUBS     r0,r0,#0x13           ;117
000068  d074              BEQ      |L8.340|
                  |L8.106|
;;;253                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;254                TEXT_SetTextColor(hItem, GUI_WHITE);            
;;;255                if(SET_Current_Laod > 55000 || (float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;256                    SET_Current_Laod = 0;
;;;257                }
;;;258                dis_load_c = (float)SET_Current_Laod/1000;
;;;259                sprintf(buf,"%.3f",dis_load_c);
;;;260                TEXT_SetText(hItem,buf);
;;;261            }
;;;262            
;;;263                
;;;264            
;;;265    //        test_load();
;;;266            
;;;267            if(load_sw == load_on)
;;;268            {
;;;269                if(/*DISS_Current >= 30*/SET_Current_Laod >= 25000)
;;;270                {
;;;271                    alert_flag = 1;
;;;272                }else{
;;;273                    alert_flag = 0;
;;;274                }
;;;275                battery_c = (int)bc_raw;
;;;276                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;277                sprintf(buf,"%06d",battery_c);    
;;;278                TEXT_SetText(hItem,buf);
;;;279                
;;;280                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;281    			if(DISS_Current < 10)
;;;282    			{
;;;283    				sprintf(buf,"%.3f",DISS_Current);  
;;;284    			}else{
;;;285    				sprintf(buf,"%.2f",DISS_Current);  
;;;286    			}				
;;;287                TEXT_SetText(hItem,buf);
;;;288                if(status_flash == 0){
;;;289                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;290                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;291                    if(lang == 0)
;;;292                    {
;;;293                        TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;294                        GUI_UC_SetEncodeUTF8();        
;;;295                        TEXT_SetText(hItem,"放电中");
;;;296                    }else{
;;;297                        TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;298                        GUI_UC_SetEncodeUTF8();        
;;;299                        TEXT_SetText(hItem,"Discharging");
;;;300                    }
;;;301                    status_flash = 1;
;;;302                }else{
;;;303                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;304                    TEXT_SetText(hItem,"");
;;;305                    status_flash = 0;
;;;306                }
;;;307                if(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)
;;;308    			{
;;;309    				Flag_Swtich_ON=0;
;;;310                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;311                    mode_sw = 0;
;;;312                    load_sw = load_off;
;;;313    			}
;;;314                if(DISS_Voltage * DISS_Current > 500 || DISS_Voltage * DISS_POW_Current > 500)
;;;315    			{
;;;316    				Flag_Swtich_ON=0;
;;;317                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;318                    mode_sw = 0;
;;;319                    load_sw = load_off;
;;;320    				
;;;321    			}
;;;322    //            if(olvbuff != 0 && olvbuff - DISS_Voltage > 0.3)
;;;323    //            {
;;;324    //                Flag_Swtich_ON=0;
;;;325    //                GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;326    //                mode_sw = 0;
;;;327    //                load_sw = load_off;
;;;328    //                overloadv = olvbuff;
;;;329    //                olvbuff= 0;
;;;330    //            }else{
;;;331    //                olvbuff = DISS_Voltage;
;;;332    //                overloadv = 0;
;;;333    //            }
;;;334                
;;;335            }else{
;;;336                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;337                TEXT_SetText(hItem,"");
;;;338                
;;;339                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;340                sprintf(buf,"%.3f",0.000);        
;;;341                TEXT_SetText(hItem,buf);
;;;342            }
;;;343    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);       
;;;344    //        sprintf(buf,"%.3f",overloadv);
;;;345    //        TEXT_SetText(hItem,buf);
;;;346            
;;;347            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);       
;;;348            sprintf(buf,"%.1f",temp);
;;;349            TEXT_SetText(hItem,buf);
;;;350            
;;;351    		WM_RestartTimer(pMsg->Data.v, 50);
;;;352    	}
;;;353    	break;
;;;354    	
;;;355        case WM_INIT_DIALOG://重绘外观
;;;356        //
;;;357        // Initialization of 'Window'
;;;358        //
;;;359            hItem = pMsg->hWin;
;;;360            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;361    		WM_CreateTimer(hItem,ID_TimerTime1,500,0);//创建本窗口定时器
;;;362        //
;;;363        // Initialization of 'Button'
;;;364        //
;;;365    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_6);
;;;366    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;367    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;368    // 		GUI_UC_SetEncodeUTF8();
;;;369    // 		BUTTON_SetText(hItem,"充放电");
;;;370        //
;;;371        // Initialization of 'Button'
;;;372        //
;;;373    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;374    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;375    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;376    		TEXT_SetText(hItem,"");
;;;377    		
;;;378    		
;;;379           if(lang == 0)
;;;380            {
;;;381                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;382                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;383                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;384                GUI_UC_SetEncodeUTF8();
;;;385                BUTTON_SetText(hItem, "内阻测试");
;;;386            //
;;;387            // Initialization of 'Button'
;;;388            //
;;;389                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;390                BUTTON_SetPressed(hItem,1);
;;;391                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;392                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;393                GUI_UC_SetEncodeUTF8();
;;;394                BUTTON_SetText(hItem, "程控负载");
;;;395            //
;;;396            // Initialization of 'Button'
;;;397            //
;;;398                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;399                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;400                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;401                GUI_UC_SetEncodeUTF8();
;;;402                BUTTON_SetText(hItem, "程控电源");
;;;403            //
;;;404            // Initialization of 'Button'
;;;405            //
;;;406                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;407                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;408                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;409                GUI_UC_SetEncodeUTF8();
;;;410                BUTTON_SetText(hItem, "充放电");
;;;411            //
;;;412            // Initialization of 'Button'
;;;413            //
;;;414                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;415                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;416                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;417                GUI_UC_SetEncodeUTF8();
;;;418                BUTTON_SetText(hItem, "曲线");
;;;419            }else{
;;;420                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;421                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;422                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;423                GUI_UC_SetEncodeUTF8();
;;;424                BUTTON_SetText(hItem, "I.R. TEST");
;;;425            //
;;;426            // Initialization of 'Button'
;;;427            //
;;;428                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;429                BUTTON_SetPressed(hItem,1);
;;;430                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;431                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;432                GUI_UC_SetEncodeUTF8();
;;;433                BUTTON_SetText(hItem, "LOAD");
;;;434            //
;;;435            // Initialization of 'Button'
;;;436            //
;;;437                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;438                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;439                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;440                GUI_UC_SetEncodeUTF8();
;;;441                BUTTON_SetText(hItem, "POWER");
;;;442            //
;;;443            // Initialization of 'Button'
;;;444            //
;;;445                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;446                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;447                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;448                GUI_UC_SetEncodeUTF8();
;;;449                BUTTON_SetText(hItem, "C&DC");
;;;450            //
;;;451            // Initialization of 'Button'
;;;452            //
;;;453                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;454                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;455                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;456                GUI_UC_SetEncodeUTF8();
;;;457                BUTTON_SetText(hItem, "GRAPH");
;;;458            }
;;;459    		
;;;460    		
;;;461    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
;;;462    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;463            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;464    		GUI_UC_SetEncodeUTF8();
;;;465    		TEXT_SetText(hItem,"V:");
;;;466    		
;;;467    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
;;;468    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;469            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;470    		GUI_UC_SetEncodeUTF8();
;;;471    		TEXT_SetText(hItem,"I:");
;;;472            
;;;473            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
;;;474    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;475            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;476    		GUI_UC_SetEncodeUTF8();
;;;477    		TEXT_SetText(hItem,"V");
;;;478    		
;;;479    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
;;;480    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;481            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;482    		GUI_UC_SetEncodeUTF8();
;;;483    		TEXT_SetText(hItem,"A");
;;;484            
;;;485            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_48);
;;;486    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;487            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;488            if(lang == 0)
;;;489            {
;;;490                TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;491                GUI_UC_SetEncodeUTF8();
;;;492                TEXT_SetText(hItem,"负载电流");
;;;493            }else{
;;;494                TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;495                GUI_UC_SetEncodeUTF8();
;;;496                TEXT_SetText(hItem,"Load C");
;;;497            }
;;;498            
;;;499            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_49);
;;;500            sprintf(buf,"%.3f",dis_load_c);
;;;501    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;502            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;503    		GUI_UC_SetEncodeUTF8();     
;;;504    		TEXT_SetText(hItem,buf);
;;;505            
;;;506            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);
;;;507            sprintf(buf,"%.3f",load_cutoffv);
;;;508    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;509            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;510    		GUI_UC_SetEncodeUTF8();     
;;;511    		TEXT_SetText(hItem,buf);
;;;512            
;;;513            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;514            sprintf(buf,"%.3f",0.000);
;;;515    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;516            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;517    		GUI_UC_SetEncodeUTF8();        
;;;518    		TEXT_SetText(hItem,buf);
;;;519            
;;;520            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;521            sprintf(buf,"%.3f",0.000);
;;;522    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;523            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;524    		GUI_UC_SetEncodeUTF8();        
;;;525    		TEXT_SetText(hItem,buf);
;;;526            
;;;527            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;528            sprintf(buf,"%05d",0);
;;;529            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;530            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;531            GUI_UC_SetEncodeUTF8();        
;;;532            TEXT_SetText(hItem,buf);
;;;533            if(lang == 0)
;;;534            {
;;;535    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;536    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;537    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;538    			GUI_UC_SetEncodeUTF8();        
;;;539    			TEXT_SetText(hItem,"负载模式");
;;;540    			
;;;541    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;542    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;543    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;544    			GUI_UC_SetEncodeUTF8();        
;;;545    			TEXT_SetText(hItem,"截止电压");
;;;546    		}else{
;;;547    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;548    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;549    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;550    			GUI_UC_SetEncodeUTF8();        
;;;551    			TEXT_SetText(hItem,"Mode");
;;;552    			
;;;553    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;554    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;555    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;556    			GUI_UC_SetEncodeUTF8();        
;;;557    			TEXT_SetText(hItem,"Cutoff V");
;;;558    		}
;;;559            
;;;560            if(load_mode == 1)
;;;561            {
;;;562                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;563                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;564                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;565                GUI_UC_SetEncodeUTF8();
;;;566                GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC
;;;567                TEXT_SetText(hItem,"CC");
;;;568                flag_Load_CC = 1;
;;;569            }else if(load_mode == 0){
;;;570                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;571                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;572                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;573                GUI_UC_SetEncodeUTF8();  
;;;574                GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV            
;;;575                TEXT_SetText(hItem,"CV");
;;;576                flag_Load_CC = 0;
;;;577            }
;;;578            
;;;579    		if(lang == 0)
;;;580            {
;;;581    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;582    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;583    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;584    			GUI_UC_SetEncodeUTF8();
;;;585    			TEXT_SetText(hItem,"负载电压");
;;;586    		}else{
;;;587    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;588    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;589    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;590    			GUI_UC_SetEncodeUTF8();
;;;591    			TEXT_SetText(hItem,"Load V");
;;;592    		}
;;;593            
;;;594            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_123);
;;;595            sprintf(buf,"%.3f",dis_load_v);
;;;596    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;597            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;598    		GUI_UC_SetEncodeUTF8();     
;;;599    		TEXT_SetText(hItem,buf);
;;;600            
;;;601            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);
;;;602            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;603            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;604            sprintf(buf,"%.1f",temp);
;;;605            TEXT_SetText(hItem,buf);
;;;606            
;;;607    
;;;608        // USER START (Optionally insert additional code for further widget initialization)
;;;609        // USER END
;;;610        break;
;;;611      case WM_NOTIFY_PARENT:
;;;612        Id    = WM_GetId(pMsg->hWinSrc);
;;;613        NCode = pMsg->Data.v;
;;;614        switch(Id) {
;;;615        case ID_BUTTON_6: // Notifications sent by 'Button'
;;;616          switch(NCode) {
;;;617          case WM_NOTIFICATION_CLICKED:
;;;618            // USER START (Optionally insert code for reacting on notification message)
;;;619            // USER END
;;;620            break;
;;;621          case WM_NOTIFICATION_RELEASED:
;;;622            // USER START (Optionally insert code for reacting on notification message)
;;;623            // USER END
;;;624            break;
;;;625          // USER START (Optionally insert additional code for further notification handling)
;;;626          // USER END
;;;627          }
;;;628          break;
;;;629        case ID_BUTTON_7: // Notifications sent by 'Button'
;;;630          switch(NCode) {
;;;631          case WM_NOTIFICATION_CLICKED:
;;;632            // USER START (Optionally insert code for reacting on notification message)
;;;633            // USER END
;;;634            break;
;;;635          case WM_NOTIFICATION_RELEASED:
;;;636    				
;;;637            // USER START (Optionally insert code for reacting on notification message)
;;;638            // USER END
;;;639            break;
;;;640          // USER START (Optionally insert additional code for further notification handling)
;;;641          // USER END
;;;642          }
;;;643          break;
;;;644        case ID_BUTTON_8: // Notifications sent by 'Button'
;;;645          switch(NCode) {
;;;646          case WM_NOTIFICATION_CLICKED:
;;;647            // USER START (Optionally insert code for reacting on notification message)
;;;648            // USER END
;;;649            break;
;;;650          case WM_NOTIFICATION_RELEASED:
;;;651            // USER START (Optionally insert code for reacting on notification message)
;;;652            // USER END
;;;653            break;
;;;654          // USER START (Optionally insert additional code for further notification handling)
;;;655          // USER END
;;;656          }
;;;657          break;
;;;658        case ID_BUTTON_9: // Notifications sent by 'Button'
;;;659          switch(NCode) {
;;;660          case WM_NOTIFICATION_CLICKED:
;;;661            // USER START (Optionally insert code for reacting on notification message)
;;;662            // USER END
;;;663            break;
;;;664          case WM_NOTIFICATION_RELEASED:
;;;665            // USER START (Optionally insert code for reacting on notification message)
;;;666            // USER END
;;;667            break;
;;;668          // USER START (Optionally insert additional code for further notification handling)
;;;669          // USER END
;;;670          }
;;;671          break;
;;;672        case ID_BUTTON_10: // Notifications sent by 'Button'
;;;673          switch(NCode) {
;;;674          case WM_NOTIFICATION_CLICKED:
;;;675            // USER START (Optionally insert code for reacting on notification message)
;;;676            // USER END
;;;677            break;
;;;678          case WM_NOTIFICATION_RELEASED:
;;;679            // USER START (Optionally insert code for reacting on notification message)
;;;680            // USER END
;;;681            break;
;;;682          // USER START (Optionally insert additional code for further notification handling)
;;;683          // USER END
;;;684          }
;;;685          break;
;;;686        case ID_BUTTON_11: // Notifications sent by 'Button'
;;;687          switch(NCode) {
;;;688          case WM_NOTIFICATION_CLICKED:
;;;689            // USER START (Optionally insert code for reacting on notification message)
;;;690            // USER END
;;;691            break;
;;;692          case WM_NOTIFICATION_RELEASED:
;;;693            // USER START (Optionally insert code for reacting on notification message)
;;;694            // USER END
;;;695            break;
;;;696          // USER START (Optionally insert additional code for further notification handling)
;;;697          // USER END
;;;698          }
;;;699          break;
;;;700        // USER START (Optionally insert additional code for further Ids)
;;;701        // USER END
;;;702        }
;;;703        break;
;;;704      // USER START (Optionally insert additional message handling)
;;;705      // USER END
;;;706      default:
;;;707        WM_DefaultProc(pMsg);
00006a  4620              MOV      r0,r4
00006c  f7fffffe          BL       WM_DefaultProc
                  |L8.112|
;;;708        break;
;;;709      }
;;;710    }
000070  b003              ADD      sp,sp,#0xc
000072  ecbd8b06          VPOP     {d8-d10}
000076  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.122|
00007a  4658              MOV      r0,r11                ;120
00007c  f7fffffe          BL       GUI_SetColor
000080  231a              MOVS     r3,#0x1a              ;121
000082  f44f72f0          MOV      r2,#0x1e0             ;121
000086  2119              MOVS     r1,#0x19              ;121
000088  2000              MOVS     r0,#0                 ;121
00008a  f7fffffe          BL       GUI_FillRect
00008e  f24a50ff          MOV      r0,#0xa5ff            ;122
000092  f7fffffe          BL       GUI_SetColor
000096  48e5              LDR      r0,|L8.1068|
000098  f7fffffe          BL       GUI_SetFont
00009c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000a0  2002              MOVS     r0,#2                 ;125
0000a2  f7fffffe          BL       GUI_SetTextMode
0000a6  48e2              LDR      r0,|L8.1072|
0000a8  7800              LDRB     r0,[r0,#0]            ;126  ; jkflag
0000aa  2801              CMP      r0,#1                 ;126
0000ac  d104              BNE      |L8.184|
0000ae  2201              MOVS     r2,#1                 ;128
0000b0  2105              MOVS     r1,#5                 ;128
0000b2  a0e0              ADR      r0,|L8.1076|
0000b4  f7fffffe          BL       GUI_DispStringAt
                  |L8.184|
0000b8  7838              LDRB     r0,[r7,#0]            ;130  ; lang
0000ba  2800              CMP      r0,#0                 ;130
0000bc  d051              BEQ      |L8.354|
0000be  4658              MOV      r0,r11                ;138
0000c0  f7fffffe          BL       GUI_SetColor
0000c4  48dd              LDR      r0,|L8.1084|
0000c6  f7fffffe          BL       GUI_SetFont
0000ca  2203              MOVS     r2,#3                 ;140
0000cc  2182              MOVS     r1,#0x82              ;140
0000ce  a0dc              ADR      r0,|L8.1088|
0000d0  f7fffffe          BL       GUI_DispStringAt
                  |L8.212|
0000d4  48dc              LDR      r0,|L8.1096|
0000d6  f7fffffe          BL       GUI_SetFont
0000da  f44f74e1          MOV      r4,#0x1c2             ;148
0000de  224b              MOVS     r2,#0x4b              ;148
0000e0  4621              MOV      r1,r4                 ;148
0000e2  a0da              ADR      r0,|L8.1100|
0000e4  f7fffffe          BL       GUI_DispStringAt
0000e8  2264              MOVS     r2,#0x64              ;149
0000ea  4621              MOV      r1,r4                 ;149
0000ec  a0d8              ADR      r0,|L8.1104|
0000ee  f7fffffe          BL       GUI_DispStringAt
0000f2  2296              MOVS     r2,#0x96              ;150
0000f4  4621              MOV      r1,r4                 ;150
0000f6  a0d6              ADR      r0,|L8.1104|
0000f8  f7fffffe          BL       GUI_DispStringAt
0000fc  48d5              LDR      r0,|L8.1108|
0000fe  f7fffffe          BL       GUI_SetFont
000102  4630              MOV      r0,r6                 ;153
000104  f7fffffe          BL       GUI_SetColor
000108  22be              MOVS     r2,#0xbe              ;154
00010a  211c              MOVS     r1,#0x1c              ;154
00010c  a0d2              ADR      r0,|L8.1112|
00010e  f7fffffe          BL       GUI_DispStringAt
000112  4630              MOV      r0,r6                 ;155
000114  f7fffffe          BL       GUI_SetColor
000118  22c4              MOVS     r2,#0xc4              ;156
00011a  21f1              MOVS     r1,#0xf1              ;156
00011c  a0cf              ADR      r0,|L8.1116|
00011e  f7fffffe          BL       GUI_DispStringAt
000122  22bb              MOVS     r2,#0xbb              ;157
000124  f44f7183          MOV      r1,#0x106             ;157
000128  a0cd              ADR      r0,|L8.1120|
00012a  f7fffffe          BL       GUI_DispStringAt
00012e  4628              MOV      r0,r5                 ;159
000130  f7fffffe          BL       GUI_SetColor
000134  48cb              LDR      r0,|L8.1124|
000136  f7fffffe          BL       GUI_SetFont
00013a  2202              MOVS     r2,#2                 ;161
00013c  f44f71ab          MOV      r1,#0x156             ;161
000140  a0c9              ADR      r0,|L8.1128|
000142  f7fffffe          BL       GUI_DispStringAt
000146  48c0              LDR      r0,|L8.1096|
000148  f7fffffe          BL       GUI_SetFont
00014c  2202              MOVS     r2,#2                 ;163
00014e  e002              B        |L8.342|
                  |L8.336|
000150  e215              B        |L8.1406|
                  |L8.338|
000152  e3d0              B        |L8.2294|
                  |L8.340|
000154  e016              B        |L8.388|
                  |L8.342|
000156  f44f71af          MOV      r1,#0x15e             ;163
00015a  a0c4              ADR      r0,|L8.1132|
00015c  f7fffffe          BL       GUI_DispStringAt
                  |L8.352|
000160  e786              B        |L8.112|
                  |L8.354|
000162  4658              MOV      r0,r11                ;132
000164  f7fffffe          BL       GUI_SetColor
000168  48c1              LDR      r0,|L8.1136|
00016a  f7fffffe          BL       GUI_SetFont
00016e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000172  2002              MOVS     r0,#2                 ;135
000174  f7fffffe          BL       GUI_SetTextMode
000178  2203              MOVS     r2,#3                 ;136
00017a  2182              MOVS     r1,#0x82              ;136
00017c  a0bd              ADR      r0,|L8.1140|
00017e  f7fffffe          BL       GUI_DispStringAt
000182  e7a7              B        |L8.212|
                  |L8.388|
000184  68e0              LDR      r0,[r4,#0xc]          ;182
000186  f7fffffe          BL       WM_GetTimerId
00018a  2802              CMP      r0,#2                 ;182
00018c  d1e8              BNE      |L8.352|
00018e  48bd              LDR      r0,|L8.1156|
000190  7800              LDRB     r0,[r0,#0]            ;226  ; lock
000192  2801              CMP      r0,#1                 ;226
000194  d01c              BEQ      |L8.464|
000196  4651              MOV      r1,r10                ;231
000198  6860              LDR      r0,[r4,#4]            ;231
00019a  f7fffffe          BL       WM_GetDialogItem
00019e  a1b8              ADR      r1,|L8.1152|
0001a0  f7fffffe          BL       TEXT_SetText
                  |L8.420|
0001a4  4eb8              LDR      r6,|L8.1160|
0001a6  49b9              LDR      r1,|L8.1164|
0001a8  6830              LDR      r0,[r6,#0]            ;235  ; DISS_Voltage
0001aa  4288              CMP      r0,r1                 ;235
0001ac  da18              BGE      |L8.480|
0001ae  f6400191          MOV      r1,#0x891             ;237
0001b2  6860              LDR      r0,[r4,#4]            ;237
0001b4  f7fffffe          BL       WM_GetDialogItem
0001b8  4605              MOV      r5,r0                 ;237
0001ba  ec532b18          VMOV     r2,r3,d8              ;238
0001be  a1b4              ADR      r1,|L8.1168|
0001c0  4668              MOV      r0,sp                 ;238
0001c2  f7fffffe          BL       __2sprintf
0001c6  4669              MOV      r1,sp                 ;239
0001c8  4628              MOV      r0,r5                 ;239
0001ca  f7fffffe          BL       TEXT_SetText
0001ce  e01d              B        |L8.524|
                  |L8.464|
0001d0  4651              MOV      r1,r10                ;228
0001d2  6860              LDR      r0,[r4,#4]            ;228
0001d4  f7fffffe          BL       WM_GetDialogItem
0001d8  a1af              ADR      r1,|L8.1176|
0001da  f7fffffe          BL       TEXT_SetText
0001de  e7e1              B        |L8.420|
                  |L8.480|
0001e0  f6400191          MOV      r1,#0x891             ;241
0001e4  6860              LDR      r0,[r4,#4]            ;241
0001e6  f7fffffe          BL       WM_GetDialogItem
0001ea  4605              MOV      r5,r0                 ;241
0001ec  48ab              LDR      r0,|L8.1180|
0001ee  6800              LDR      r0,[r0,#0]            ;242  ; disloadv
0001f0  f7fffffe          BL       __aeabi_f2d
0001f4  ec410b10          VMOV     d0,r0,r1              ;242
0001f8  a1a5              ADR      r1,|L8.1168|
0001fa  ec532b10          VMOV     r2,r3,d0              ;242
0001fe  4668              MOV      r0,sp                 ;242
000200  f7fffffe          BL       __2sprintf
000204  4669              MOV      r1,sp                 ;243
000206  4628              MOV      r0,r5                 ;243
000208  f7fffffe          BL       TEXT_SetText
                  |L8.524|
00020c  f8d90010          LDR      r0,[r9,#0x10]         ;250  ; Run_Control
000210  f8dfa28c          LDR      r10,|L8.1184|
000214  ee000a10          VMOV     s0,r0                 ;250
000218  2500              MOVS     r5,#0                 ;250
00021a  eeb80a40          VCVT.F32.U32 s0,s0                 ;250
00021e  eec00a29          VDIV.F32 s1,s0,s19             ;250
000222  ed960a00          VLDR     s0,[r6,#0]            ;250
000226  ee200a80          VMUL.F32 s0,s1,s0              ;250
00022a  ee100a10          VMOV     r0,s0                 ;250
00022e  4550              CMP      r0,r10                ;250
000230  dd42              BLE      |L8.696|
000232  f8c95010          STR      r5,[r9,#0x10]         ;251  ; Run_Control
000236  f640016e          MOV      r1,#0x86e             ;252
00023a  f8d80004          LDR      r0,[r8,#4]            ;252  ; load_wind
00023e  f7fffffe          BL       WM_GetDialogItem
000242  9002              STR      r0,[sp,#8]            ;252
000244  f06f4170          MVN      r1,#0xf0000000        ;253
000248  9802              LDR      r0,[sp,#8]            ;253
00024a  f7fffffe          BL       TEXT_SetBkColor
00024e  4659              MOV      r1,r11                ;254
000250  9802              LDR      r0,[sp,#8]            ;254
000252  f7fffffe          BL       TEXT_SetTextColor
000256  f8d91010          LDR      r1,[r9,#0x10]         ;255  ; Run_Control
00025a  f24d60d8          MOV      r0,#0xd6d8            ;255
00025e  4281              CMP      r1,r0                 ;255
000260  d810              BHI      |L8.644|
000262  f8d90010          LDR      r0,[r9,#0x10]         ;255  ; Run_Control
000266  498f              LDR      r1,|L8.1188|
000268  ee000a10          VMOV     s0,r0                 ;255
00026c  eeb80a40          VCVT.F32.U32 s0,s0                 ;255
000270  eec00a29          VDIV.F32 s1,s0,s19             ;255
000274  ed960a00          VLDR     s0,[r6,#0]            ;255
000278  ee200a80          VMUL.F32 s0,s1,s0              ;255
00027c  ee100a10          VMOV     r0,s0                 ;255
000280  4288              CMP      r0,r1                 ;255
000282  dd01              BLE      |L8.648|
                  |L8.644|
000284  f8c95010          STR      r5,[r9,#0x10]         ;256  ; Run_Control
                  |L8.648|
000288  f8d90010          LDR      r0,[r9,#0x10]         ;258  ; Run_Control
00028c  ee000a10          VMOV     s0,r0                 ;258
000290  eef80a40          VCVT.F32.U32 s1,s0                 ;258
000294  ee800aa9          VDIV.F32 s0,s1,s19             ;258
000298  ee100a10          VMOV     r0,s0                 ;259
00029c  f7fffffe          BL       __aeabi_f2d
0002a0  ec410b10          VMOV     d0,r0,r1              ;259
0002a4  a17a              ADR      r1,|L8.1168|
0002a6  ec532b10          VMOV     r2,r3,d0              ;259
0002aa  4668              MOV      r0,sp                 ;259
0002ac  f7fffffe          BL       __2sprintf
0002b0  4669              MOV      r1,sp                 ;260
0002b2  9802              LDR      r0,[sp,#8]            ;260
0002b4  f7fffffe          BL       TEXT_SetText
                  |L8.696|
0002b8  f8980000          LDRB     r0,[r8,#0]            ;267  ; load_sw
0002bc  2801              CMP      r0,#1                 ;267
0002be  d032              BEQ      |L8.806|
0002c0  f6400196          MOV      r1,#0x896             ;336
0002c4  6860              LDR      r0,[r4,#4]            ;336
0002c6  f7fffffe          BL       WM_GetDialogItem
0002ca  a16d              ADR      r1,|L8.1152|
0002cc  f7fffffe          BL       TEXT_SetText
0002d0  f6400192          MOV      r1,#0x892             ;339
0002d4  6860              LDR      r0,[r4,#4]            ;339
0002d6  f7fffffe          BL       WM_GetDialogItem
0002da  4605              MOV      r5,r0                 ;339
0002dc  ec532b18          VMOV     r2,r3,d8              ;340
0002e0  a16b              ADR      r1,|L8.1168|
0002e2  4668              MOV      r0,sp                 ;340
0002e4  f7fffffe          BL       __2sprintf
0002e8  4669              MOV      r1,sp                 ;341
0002ea  4628              MOV      r0,r5                 ;341
0002ec  f7fffffe          BL       TEXT_SetText
                  |L8.752|
0002f0  f6401112          MOV      r1,#0x912             ;347
0002f4  6860              LDR      r0,[r4,#4]            ;347
0002f6  f7fffffe          BL       WM_GetDialogItem
0002fa  4605              MOV      r5,r0                 ;347
0002fc  486a              LDR      r0,|L8.1192|
0002fe  6800              LDR      r0,[r0,#0]            ;348  ; temp
000300  f7fffffe          BL       __aeabi_f2d
000304  ec410b10          VMOV     d0,r0,r1              ;348
000308  a168              ADR      r1,|L8.1196|
00030a  ec532b10          VMOV     r2,r3,d0              ;348
00030e  4668              MOV      r0,sp                 ;348
000310  f7fffffe          BL       __2sprintf
000314  4669              MOV      r1,sp                 ;349
000316  4628              MOV      r0,r5                 ;349
000318  f7fffffe          BL       TEXT_SetText
00031c  2132              MOVS     r1,#0x32              ;351
00031e  68e0              LDR      r0,[r4,#0xc]          ;351
000320  f7fffffe          BL       WM_RestartTimer
000324  e6a4              B        |L8.112|
                  |L8.806|
000326  f8d91010          LDR      r1,[r9,#0x10]         ;269  ; Run_Control
00032a  f24612a8          MOV      r2,#0x61a8            ;269
00032e  4861              LDR      r0,|L8.1204|
000330  f04f0901          MOV      r9,#1                 ;128
000334  4291              CMP      r1,r2                 ;269
000336  d302              BCC      |L8.830|
000338  f8809000          STRB     r9,[r0,#0]            ;271
00033c  e000              B        |L8.832|
                  |L8.830|
00033e  7005              STRB     r5,[r0,#0]            ;273
                  |L8.832|
000340  485d              LDR      r0,|L8.1208|
000342  f8dfb178          LDR      r11,|L8.1212|
000346  ed900a00          VLDR     s0,[r0,#0]            ;275
00034a  eebd0ac0          VCVT.S32.F32 s0,s0                 ;275
00034e  ee100a10          VMOV     r0,s0                 ;275
000352  f8cb0000          STR      r0,[r11,#0]           ;275  ; battery_c
000356  f640110d          MOV      r1,#0x90d             ;276
00035a  6860              LDR      r0,[r4,#4]            ;276
00035c  f7fffffe          BL       WM_GetDialogItem
000360  9002              STR      r0,[sp,#8]            ;276
000362  f8db2000          LDR      r2,[r11,#0]           ;277  ; battery_c
000366  a156              ADR      r1,|L8.1216|
000368  4668              MOV      r0,sp                 ;277
00036a  f7fffffe          BL       __2sprintf
00036e  4669              MOV      r1,sp                 ;278
000370  9802              LDR      r0,[sp,#8]            ;278
000372  f7fffffe          BL       TEXT_SetText
000376  f6400192          MOV      r1,#0x892             ;280
00037a  6860              LDR      r0,[r4,#4]            ;280
00037c  f7fffffe          BL       WM_GetDialogItem
000380  9002              STR      r0,[sp,#8]            ;280
000382  f8dfb144          LDR      r11,|L8.1224|
000386  4951              LDR      r1,|L8.1228|
000388  f8db0000          LDR      r0,[r11,#0]           ;281  ; DISS_Current
00038c  4288              CMP      r0,r1                 ;281
00038e  da0a              BGE      |L8.934|
000390  f7fffffe          BL       __aeabi_f2d
000394  ec410b10          VMOV     d0,r0,r1              ;283
000398  a13d              ADR      r1,|L8.1168|
00039a  ec532b10          VMOV     r2,r3,d0              ;283
00039e  4668              MOV      r0,sp                 ;283
0003a0  f7fffffe          BL       __2sprintf
0003a4  e009              B        |L8.954|
                  |L8.934|
0003a6  f7fffffe          BL       __aeabi_f2d
0003aa  ec410b10          VMOV     d0,r0,r1              ;285
0003ae  a148              ADR      r1,|L8.1232|
0003b0  ec532b10          VMOV     r2,r3,d0              ;285
0003b4  4668              MOV      r0,sp                 ;285
0003b6  f7fffffe          BL       __2sprintf
                  |L8.954|
0003ba  4669              MOV      r1,sp                 ;287
0003bc  9802              LDR      r0,[sp,#8]            ;287
0003be  f7fffffe          BL       TEXT_SetText
0003c2  f8980001          LDRB     r0,[r8,#1]            ;288  ; status_flash
0003c6  b310              CBZ      r0,|L8.1038|
0003c8  f6400196          MOV      r1,#0x896             ;303
0003cc  6860              LDR      r0,[r4,#4]            ;303
0003ce  f7fffffe          BL       WM_GetDialogItem
0003d2  a12b              ADR      r1,|L8.1152|
0003d4  f7fffffe          BL       TEXT_SetText
0003d8  f8885001          STRB     r5,[r8,#1]            ;305
                  |L8.988|
0003dc  ed980a02          VLDR     s0,[r8,#8]            ;307
0003e0  4f3d              LDR      r7,|L8.1240|
0003e2  f8df90f8          LDR      r9,|L8.1244|
0003e6  eeb50ac0          VCMPE.F32 s0,#0.0               ;307
0003ea  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;307
0003ee  d079              BEQ      |L8.1252|
0003f0  edd60a00          VLDR     s1,[r6,#0]            ;307
0003f4  eef40ac0          VCMPE.F32 s1,s0                 ;307
0003f8  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;307
0003fc  d279              BCS      |L8.1266|
0003fe  6838              LDR      r0,[r7,#0]            ;309  ; flagA
000400  f0200040          BIC      r0,r0,#0x40           ;309
000404  6038              STR      r0,[r7,#0]            ;309  ; flagA
000406  f44f4100          MOV      r1,#0x8000            ;310
00040a  4835              LDR      r0,|L8.1248|
00040c  e06b              B        |L8.1254|
                  |L8.1038|
00040e  e092              B        |L8.1334|
                  |L8.1040|
                          DCD      Run_Control
                  |L8.1044|
000414  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1048|
                          DCD      0x00d3d3d3
                  |L8.1052|
00041c  00000000          DCFD     0x0000000000000000 ; 0
000420  00000000
                  |L8.1060|
                          DCD      lang
                  |L8.1064|
                          DCD      ||.data||
                  |L8.1068|
                          DCD      GUI_Fontsymbol
                  |L8.1072|
                          DCD      jkflag
                  |L8.1076|
000434  4a696e6b          DCB      "Jinko",0
000438  6f00    
00043a  00                DCB      0
00043b  00                DCB      0
                  |L8.1084|
                          DCD      GUI_Font20_ASCII
                  |L8.1088|
000440  44495350          DCB      "DISPLAY",0
000444  4c415900
                  |L8.1096|
                          DCD      GUI_Font24_1
                  |L8.1100|
00044c  4100              DCB      "A",0
00044e  00                DCB      0
00044f  00                DCB      0
                  |L8.1104|
000450  5600              DCB      "V",0
000452  00                DCB      0
000453  00                DCB      0
                  |L8.1108|
                          DCD      GUI_FontEN40
                  |L8.1112|
000458  433a00            DCB      "C:",0
00045b  00                DCB      0
                  |L8.1116|
00045c  6d00              DCB      "m",0
00045e  00                DCB      0
00045f  00                DCB      0
                  |L8.1120|
000460  414800            DCB      "AH",0
000463  00                DCB      0
                  |L8.1124|
                          DCD      GUI_Fontunit
                  |L8.1128|
000468  c2b000            DCB      194,176,0
00046b  00                DCB      0
                  |L8.1132|
00046c  4300              DCB      "C",0
00046e  00                DCB      0
00046f  00                DCB      0
                  |L8.1136|
                          DCD      GUI_FontHZ20S
                  |L8.1140|
000474  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
000478  878fe698
00047c  bee7a4ba
                  |L8.1152|
000480  00                DCB      0
000481  00                DCB      0
000482  00                DCB      0
000483  00                DCB      0
                  |L8.1156|
                          DCD      lock
                  |L8.1160|
                          DCD      DISS_Voltage
                  |L8.1164|
                          DCD      0x3e99999a
                  |L8.1168|
000490  252e3366          DCB      "%.3f",0
000494  00      
000495  00                DCB      0
000496  00                DCB      0
000497  00                DCB      0
                  |L8.1176|
000498  e9948100          DCB      233,148,129,0
                  |L8.1180|
                          DCD      disloadv
                  |L8.1184|
                          DCD      0x43fa0000
                  |L8.1188|
                          DCD      0x43480000
                  |L8.1192|
                          DCD      temp
                  |L8.1196|
0004ac  252e3166          DCB      "%.1f",0
0004b0  00      
0004b1  00                DCB      0
0004b2  00                DCB      0
0004b3  00                DCB      0
                  |L8.1204|
                          DCD      alert_flag
                  |L8.1208|
                          DCD      bc_raw
                  |L8.1212|
                          DCD      battery_c
                  |L8.1216|
0004c0  25303664          DCB      "%06d",0
0004c4  00      
0004c5  00                DCB      0
0004c6  00                DCB      0
0004c7  00                DCB      0
                  |L8.1224|
                          DCD      DISS_Current
                  |L8.1228|
                          DCD      0x41200000
                  |L8.1232|
0004d0  252e3266          DCB      "%.2f",0
0004d4  00      
0004d5  00                DCB      0
0004d6  00                DCB      0
0004d7  00                DCB      0
                  |L8.1240|
                          DCD      flagA
                  |L8.1244|
                          DCD      mode_sw
                  |L8.1248|
                          DCD      0x40020000
                  |L8.1252|
0004e4  e005              B        |L8.1266|
                  |L8.1254|
0004e6  f7fffffe          BL       GPIO_SetBits
0004ea  f8895000          STRB     r5,[r9,#0]            ;311
0004ee  f8885000          STRB     r5,[r8,#0]            ;312
                  |L8.1266|
0004f2  ed960a00          VLDR     s0,[r6,#0]            ;314
0004f6  eddb0a00          VLDR     s1,[r11,#0]           ;314
0004fa  ee600a20          VMUL.F32 s1,s0,s1              ;314
0004fe  ee100a90          VMOV     r0,s1                 ;314
000502  4550              CMP      r0,r10                ;314
000504  dc09              BGT      |L8.1306|
000506  48fc              LDR      r0,|L8.2296|
000508  edd00a00          VLDR     s1,[r0,#0]            ;314
00050c  ee200a20          VMUL.F32 s0,s0,s1              ;314
000510  ee100a10          VMOV     r0,s0                 ;314
000514  4550              CMP      r0,r10                ;314
000516  f77faeeb          BLE      |L8.752|
                  |L8.1306|
00051a  6838              LDR      r0,[r7,#0]            ;316  ; flagA
00051c  f0200040          BIC      r0,r0,#0x40           ;316
000520  6038              STR      r0,[r7,#0]            ;316  ; flagA
000522  f44f4100          MOV      r1,#0x8000            ;317
000526  48f5              LDR      r0,|L8.2300|
000528  f7fffffe          BL       GPIO_SetBits
00052c  f8895000          STRB     r5,[r9,#0]            ;318
000530  f8885000          STRB     r5,[r8,#0]            ;319
000534  e6dc              B        |L8.752|
                  |L8.1334|
000536  f6400196          MOV      r1,#0x896             ;289
00053a  6860              LDR      r0,[r4,#4]            ;289
00053c  f7fffffe          BL       WM_GetDialogItem
000540  9002              STR      r0,[sp,#8]            ;289
000542  21ff              MOVS     r1,#0xff              ;290
000544  9802              LDR      r0,[sp,#8]            ;290
000546  f7fffffe          BL       TEXT_SetTextColor
00054a  7838              LDRB     r0,[r7,#0]            ;291  ; lang
00054c  b160              CBZ      r0,|L8.1384|
00054e  49ec              LDR      r1,|L8.2304|
000550  9802              LDR      r0,[sp,#8]            ;297
000552  f7fffffe          BL       TEXT_SetFont
000556  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00055a  a1ea              ADR      r1,|L8.2308|
00055c  9802              LDR      r0,[sp,#8]            ;299
00055e  f7fffffe          BL       TEXT_SetText
                  |L8.1378|
000562  f8889001          STRB     r9,[r8,#1]            ;301
000566  e739              B        |L8.988|
                  |L8.1384|
000568  49e9              LDR      r1,|L8.2320|
00056a  9802              LDR      r0,[sp,#8]            ;293
00056c  f7fffffe          BL       TEXT_SetFont
000570  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000574  a1e7              ADR      r1,|L8.2324|
000576  9802              LDR      r0,[sp,#8]            ;295
000578  f7fffffe          BL       TEXT_SetText
00057c  e7f1              B        |L8.1378|
                  |L8.1406|
00057e  f8d49004          LDR      r9,[r4,#4]            ;359
000582  2100              MOVS     r1,#0                 ;360
000584  4648              MOV      r0,r9                 ;360
000586  f7fffffe          BL       WINDOW_SetBkColor
00058a  2300              MOVS     r3,#0                 ;361
00058c  f44f72fa          MOV      r2,#0x1f4             ;361
000590  2102              MOVS     r1,#2                 ;361
000592  4648              MOV      r0,r9                 ;361
000594  f7fffffe          BL       WM_CreateTimer
000598  4651              MOV      r1,r10                ;373
00059a  6860              LDR      r0,[r4,#4]            ;373
00059c  f7fffffe          BL       WM_GetDialogItem
0005a0  4681              MOV      r9,r0                 ;373
0005a2  21ff              MOVS     r1,#0xff              ;374
0005a4  4648              MOV      r0,r9                 ;374
0005a6  f7fffffe          BL       TEXT_SetTextColor
0005aa  49dd              LDR      r1,|L8.2336|
0005ac  4648              MOV      r0,r9                 ;375
0005ae  f7fffffe          BL       TEXT_SetFont
0005b2  f2af1134          ADR      r1,|L8.1152|
0005b6  4648              MOV      r0,r9                 ;376
0005b8  f7fffffe          BL       TEXT_SetText
0005bc  7838              LDRB     r0,[r7,#0]            ;379  ; lang
0005be  f640010b          MOV      r1,#0x80b             ;381
0005c2  f640090c          MOV      r9,#0x80c             ;389
0005c6  f6400a0d          MOV      r10,#0x80d            ;398
0005ca  2800              CMP      r0,#0                 ;379
0005cc  d07d              BEQ      |L8.1738|
0005ce  6860              LDR      r0,[r4,#4]            ;420
0005d0  f7fffffe          BL       WM_GetDialogItem
0005d4  9002              STR      r0,[sp,#8]            ;420
0005d6  2200              MOVS     r2,#0                 ;421
0005d8  4611              MOV      r1,r2                 ;421
0005da  9802              LDR      r0,[sp,#8]            ;421
0005dc  f7fffffe          BL       BUTTON_SetTextColor
0005e0  49d0              LDR      r1,|L8.2340|
0005e2  9802              LDR      r0,[sp,#8]            ;422
0005e4  f7fffffe          BL       BUTTON_SetFont
0005e8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005ec  a1ce              ADR      r1,|L8.2344|
0005ee  9802              LDR      r0,[sp,#8]            ;424
0005f0  f7fffffe          BL       BUTTON_SetText
0005f4  4649              MOV      r1,r9                 ;428
0005f6  6860              LDR      r0,[r4,#4]            ;428
0005f8  f7fffffe          BL       WM_GetDialogItem
0005fc  4681              MOV      r9,r0                 ;428
0005fe  2101              MOVS     r1,#1                 ;429
000600  4648              MOV      r0,r9                 ;429
000602  f7fffffe          BL       BUTTON_SetPressed
000606  2200              MOVS     r2,#0                 ;430
000608  4611              MOV      r1,r2                 ;430
00060a  4648              MOV      r0,r9                 ;430
00060c  f7fffffe          BL       BUTTON_SetTextColor
000610  49c4              LDR      r1,|L8.2340|
000612  4648              MOV      r0,r9                 ;431
000614  f7fffffe          BL       BUTTON_SetFont
000618  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00061c  a1c5              ADR      r1,|L8.2356|
00061e  4648              MOV      r0,r9                 ;433
000620  f7fffffe          BL       BUTTON_SetText
000624  4651              MOV      r1,r10                ;437
000626  6860              LDR      r0,[r4,#4]            ;437
000628  f7fffffe          BL       WM_GetDialogItem
00062c  4681              MOV      r9,r0                 ;437
00062e  2200              MOVS     r2,#0                 ;438
000630  4611              MOV      r1,r2                 ;438
000632  4648              MOV      r0,r9                 ;438
000634  f7fffffe          BL       BUTTON_SetTextColor
000638  49ba              LDR      r1,|L8.2340|
00063a  4648              MOV      r0,r9                 ;439
00063c  f7fffffe          BL       BUTTON_SetFont
000640  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000644  a1bd              ADR      r1,|L8.2364|
000646  4648              MOV      r0,r9                 ;441
000648  f7fffffe          BL       BUTTON_SetText
00064c  f640010e          MOV      r1,#0x80e             ;445
000650  6860              LDR      r0,[r4,#4]            ;445
000652  f7fffffe          BL       WM_GetDialogItem
000656  4681              MOV      r9,r0                 ;445
000658  2200              MOVS     r2,#0                 ;446
00065a  4611              MOV      r1,r2                 ;446
00065c  4648              MOV      r0,r9                 ;446
00065e  f7fffffe          BL       BUTTON_SetTextColor
000662  49b0              LDR      r1,|L8.2340|
000664  4648              MOV      r0,r9                 ;447
000666  f7fffffe          BL       BUTTON_SetFont
00066a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00066e  a1b5              ADR      r1,|L8.2372|
000670  4648              MOV      r0,r9                 ;449
000672  f7fffffe          BL       BUTTON_SetText
000676  f640010f          MOV      r1,#0x80f             ;453
00067a  6860              LDR      r0,[r4,#4]            ;453
00067c  f7fffffe          BL       WM_GetDialogItem
000680  4681              MOV      r9,r0                 ;453
000682  2200              MOVS     r2,#0                 ;454
000684  4611              MOV      r1,r2                 ;454
000686  4648              MOV      r0,r9                 ;454
000688  f7fffffe          BL       BUTTON_SetTextColor
00068c  49a5              LDR      r1,|L8.2340|
00068e  4648              MOV      r0,r9                 ;455
000690  f7fffffe          BL       BUTTON_SetFont
000694  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000698  a1ac              ADR      r1,|L8.2380|
00069a  4648              MOV      r0,r9                 ;457
00069c  f7fffffe          BL       BUTTON_SetText
                  |L8.1696|
0006a0  f44f6101          MOV      r1,#0x810             ;461
0006a4  6860              LDR      r0,[r4,#4]            ;461
0006a6  f7fffffe          BL       WM_GetDialogItem
0006aa  4681              MOV      r9,r0                 ;461
0006ac  4631              MOV      r1,r6                 ;462
0006ae  4648              MOV      r0,r9                 ;462
0006b0  f7fffffe          BL       TEXT_SetTextColor
0006b4  49a7              LDR      r1,|L8.2388|
0006b6  4648              MOV      r0,r9                 ;463
0006b8  f7fffffe          BL       TEXT_SetFont
0006bc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006c0  a1a5              ADR      r1,|L8.2392|
0006c2  4648              MOV      r0,r9                 ;465
0006c4  f7fffffe          BL       TEXT_SetText
0006c8  e000              B        |L8.1740|
                  |L8.1738|
0006ca  e16e              B        |L8.2474|
                  |L8.1740|
0006cc  f6400111          MOV      r1,#0x811             ;467
0006d0  6860              LDR      r0,[r4,#4]            ;467
0006d2  f7fffffe          BL       WM_GetDialogItem
0006d6  4681              MOV      r9,r0                 ;467
0006d8  4631              MOV      r1,r6                 ;468
0006da  4648              MOV      r0,r9                 ;468
0006dc  f7fffffe          BL       TEXT_SetTextColor
0006e0  499c              LDR      r1,|L8.2388|
0006e2  4648              MOV      r0,r9                 ;469
0006e4  f7fffffe          BL       TEXT_SetFont
0006e8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006ec  a19b              ADR      r1,|L8.2396|
0006ee  4648              MOV      r0,r9                 ;471
0006f0  f7fffffe          BL       TEXT_SetText
0006f4  f640011e          MOV      r1,#0x81e             ;473
0006f8  6860              LDR      r0,[r4,#4]            ;473
0006fa  f7fffffe          BL       WM_GetDialogItem
0006fe  4681              MOV      r9,r0                 ;473
000700  4631              MOV      r1,r6                 ;474
000702  4648              MOV      r0,r9                 ;474
000704  f7fffffe          BL       TEXT_SetTextColor
000708  4992              LDR      r1,|L8.2388|
00070a  4648              MOV      r0,r9                 ;475
00070c  f7fffffe          BL       TEXT_SetFont
000710  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000714  f2af21c8          ADR      r1,|L8.1104|
000718  4648              MOV      r0,r9                 ;477
00071a  f7fffffe          BL       TEXT_SetText
00071e  f640011f          MOV      r1,#0x81f             ;479
000722  6860              LDR      r0,[r4,#4]            ;479
000724  f7fffffe          BL       WM_GetDialogItem
000728  4681              MOV      r9,r0                 ;479
00072a  4631              MOV      r1,r6                 ;480
00072c  4648              MOV      r0,r9                 ;480
00072e  f7fffffe          BL       TEXT_SetTextColor
000732  4988              LDR      r1,|L8.2388|
000734  4648              MOV      r0,r9                 ;481
000736  f7fffffe          BL       TEXT_SetFont
00073a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00073e  f2af21f4          ADR      r1,|L8.1100|
000742  4648              MOV      r0,r9                 ;483
000744  f7fffffe          BL       TEXT_SetText
000748  f640016d          MOV      r1,#0x86d             ;485
00074c  6860              LDR      r0,[r4,#4]            ;485
00074e  f7fffffe          BL       WM_GetDialogItem
000752  4606              MOV      r6,r0                 ;485
000754  2100              MOVS     r1,#0                 ;486
000756  4630              MOV      r0,r6                 ;486
000758  f7fffffe          BL       TEXT_SetTextColor
00075c  4980              LDR      r1,|L8.2400|
00075e  4630              MOV      r0,r6                 ;487
000760  f7fffffe          BL       TEXT_SetBkColor
000764  7838              LDRB     r0,[r7,#0]            ;488  ; lang
000766  2800              CMP      r0,#0                 ;488
000768  d07e              BEQ      |L8.2152|
00076a  4965              LDR      r1,|L8.2304|
00076c  4630              MOV      r0,r6                 ;494
00076e  f7fffffe          BL       TEXT_SetFont
000772  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000776  a17b              ADR      r1,|L8.2404|
000778  4630              MOV      r0,r6                 ;496
00077a  f7fffffe          BL       TEXT_SetText
                  |L8.1918|
00077e  f640016e          MOV      r1,#0x86e             ;499
000782  6860              LDR      r0,[r4,#4]            ;499
000784  f7fffffe          BL       WM_GetDialogItem
000788  4606              MOV      r6,r0                 ;499
00078a  ee1a0a10          VMOV     r0,s20                ;500
00078e  f7fffffe          BL       __aeabi_f2d
000792  ec410b10          VMOV     d0,r0,r1              ;500
000796  ec532b10          VMOV     r2,r3,d0              ;500
00079a  f2af310c          ADR      r1,|L8.1168|
00079e  4668              MOV      r0,sp                 ;500
0007a0  f7fffffe          BL       __2sprintf
0007a4  4659              MOV      r1,r11                ;501
0007a6  4630              MOV      r0,r6                 ;501
0007a8  f7fffffe          BL       TEXT_SetTextColor
0007ac  496f              LDR      r1,|L8.2412|
0007ae  4630              MOV      r0,r6                 ;502
0007b0  f7fffffe          BL       TEXT_SetFont
0007b4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007b8  4669              MOV      r1,sp                 ;504
0007ba  4630              MOV      r0,r6                 ;504
0007bc  f7fffffe          BL       TEXT_SetText
0007c0  f640112d          MOV      r1,#0x92d             ;506
0007c4  6860              LDR      r0,[r4,#4]            ;506
0007c6  f7fffffe          BL       WM_GetDialogItem
0007ca  4606              MOV      r6,r0                 ;506
0007cc  f8d80008          LDR      r0,[r8,#8]            ;507  ; load_cutoffv
0007d0  f7fffffe          BL       __aeabi_f2d
0007d4  ec410b10          VMOV     d0,r0,r1              ;507
0007d8  ec532b10          VMOV     r2,r3,d0              ;507
0007dc  f2af3150          ADR      r1,|L8.1168|
0007e0  4668              MOV      r0,sp                 ;507
0007e2  f7fffffe          BL       __2sprintf
0007e6  4659              MOV      r1,r11                ;508
0007e8  4630              MOV      r0,r6                 ;508
0007ea  f7fffffe          BL       TEXT_SetTextColor
0007ee  495f              LDR      r1,|L8.2412|
0007f0  4630              MOV      r0,r6                 ;509
0007f2  f7fffffe          BL       TEXT_SetFont
0007f6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007fa  4669              MOV      r1,sp                 ;511
0007fc  4630              MOV      r0,r6                 ;511
0007fe  f7fffffe          BL       TEXT_SetText
000802  f6400191          MOV      r1,#0x891             ;513
000806  6860              LDR      r0,[r4,#4]            ;513
000808  f7fffffe          BL       WM_GetDialogItem
00080c  4606              MOV      r6,r0                 ;513
00080e  ec532b18          VMOV     r2,r3,d8              ;514
000812  f2af3184          ADR      r1,|L8.1168|
000816  4668              MOV      r0,sp                 ;514
000818  f7fffffe          BL       __2sprintf
00081c  4629              MOV      r1,r5                 ;515
00081e  4630              MOV      r0,r6                 ;515
000820  f7fffffe          BL       TEXT_SetTextColor
000824  4952              LDR      r1,|L8.2416|
000826  4630              MOV      r0,r6                 ;516
000828  f7fffffe          BL       TEXT_SetFont
00082c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000830  4669              MOV      r1,sp                 ;518
000832  4630              MOV      r0,r6                 ;518
000834  f7fffffe          BL       TEXT_SetText
000838  f6400192          MOV      r1,#0x892             ;520
00083c  6860              LDR      r0,[r4,#4]            ;520
00083e  f7fffffe          BL       WM_GetDialogItem
000842  4606              MOV      r6,r0                 ;520
000844  ec532b18          VMOV     r2,r3,d8              ;521
000848  f2af31bc          ADR      r1,|L8.1168|
00084c  4668              MOV      r0,sp                 ;521
00084e  f7fffffe          BL       __2sprintf
000852  4629              MOV      r1,r5                 ;522
000854  4630              MOV      r0,r6                 ;522
000856  f7fffffe          BL       TEXT_SetTextColor
00085a  4945              LDR      r1,|L8.2416|
00085c  4630              MOV      r0,r6                 ;523
00085e  f7fffffe          BL       TEXT_SetFont
000862  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000866  e000              B        |L8.2154|
                  |L8.2152|
000868  e109              B        |L8.2686|
                  |L8.2154|
00086a  4669              MOV      r1,sp                 ;525
00086c  4630              MOV      r0,r6                 ;525
00086e  f7fffffe          BL       TEXT_SetText
000872  f640110d          MOV      r1,#0x90d             ;527
000876  6860              LDR      r0,[r4,#4]            ;527
000878  f7fffffe          BL       WM_GetDialogItem
00087c  4606              MOV      r6,r0                 ;527
00087e  2200              MOVS     r2,#0                 ;528
000880  a13c              ADR      r1,|L8.2420|
000882  4668              MOV      r0,sp                 ;528
000884  f7fffffe          BL       __2sprintf
000888  4629              MOV      r1,r5                 ;529
00088a  4630              MOV      r0,r6                 ;529
00088c  f7fffffe          BL       TEXT_SetTextColor
000890  4937              LDR      r1,|L8.2416|
000892  4630              MOV      r0,r6                 ;530
000894  f7fffffe          BL       TEXT_SetFont
000898  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00089c  4669              MOV      r1,sp                 ;532
00089e  4630              MOV      r0,r6                 ;532
0008a0  f7fffffe          BL       TEXT_SetText
0008a4  7838              LDRB     r0,[r7,#0]            ;533  ; lang
0008a6  f640110e          MOV      r1,#0x90e             ;535
0008aa  f6401639          MOV      r6,#0x939             ;541
0008ae  2800              CMP      r0,#0                 ;533
0008b0  d068              BEQ      |L8.2436|
0008b2  6860              LDR      r0,[r4,#4]            ;547
0008b4  f7fffffe          BL       WM_GetDialogItem
0008b8  4681              MOV      r9,r0                 ;547
0008ba  4659              MOV      r1,r11                ;548
0008bc  4648              MOV      r0,r9                 ;548
0008be  f7fffffe          BL       TEXT_SetTextColor
0008c2  490f              LDR      r1,|L8.2304|
0008c4  4648              MOV      r0,r9                 ;549
0008c6  f7fffffe          BL       TEXT_SetFont
0008ca  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0008ce  a12b              ADR      r1,|L8.2428|
0008d0  4648              MOV      r0,r9                 ;551
0008d2  f7fffffe          BL       TEXT_SetText
0008d6  4631              MOV      r1,r6                 ;553
0008d8  6860              LDR      r0,[r4,#4]            ;553
0008da  f7fffffe          BL       WM_GetDialogItem
0008de  4606              MOV      r6,r0                 ;553
0008e0  4659              MOV      r1,r11                ;554
0008e2  4630              MOV      r0,r6                 ;554
0008e4  f7fffffe          BL       TEXT_SetTextColor
0008e8  4905              LDR      r1,|L8.2304|
0008ea  4630              MOV      r0,r6                 ;555
0008ec  f7fffffe          BL       TEXT_SetFont
0008f0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0008f4  e047              B        |L8.2438|
                  |L8.2294|
0008f6  e19a              B        |L8.3118|
                  |L8.2296|
                          DCD      DISS_POW_Current
                  |L8.2300|
                          DCD      0x40020000
                  |L8.2304|
                          DCD      GUI_Font20_ASCII
                  |L8.2308|
000904  44697363          DCB      "Discharging",0
000908  68617267
00090c  696e6700
                  |L8.2320|
                          DCD      GUI_FontHZ16
                  |L8.2324|
000914  e694bee7          DCB      230,148,190,231,148,181,228,184,173,0
000918  94b5e4b8
00091c  ad00    
00091e  00                DCB      0
00091f  00                DCB      0
                  |L8.2336|
                          DCD      GUI_FontHZ14
                  |L8.2340|
                          DCD      GUI_Font16B_ASCII
                  |L8.2344|
000928  492e522e          DCB      "I.R. TEST",0
00092c  20544553
000930  5400    
000932  00                DCB      0
000933  00                DCB      0
                  |L8.2356|
000934  4c4f4144          DCB      "LOAD",0
000938  00      
000939  00                DCB      0
00093a  00                DCB      0
00093b  00                DCB      0
                  |L8.2364|
00093c  504f5745          DCB      "POWER",0
000940  5200    
000942  00                DCB      0
000943  00                DCB      0
                  |L8.2372|
000944  43264443          DCB      "C&DC",0
000948  00      
000949  00                DCB      0
00094a  00                DCB      0
00094b  00                DCB      0
                  |L8.2380|
00094c  47524150          DCB      "GRAPH",0
000950  4800    
000952  00                DCB      0
000953  00                DCB      0
                  |L8.2388|
                          DCD      GUI_FontEN40
                  |L8.2392|
000958  563a00            DCB      "V:",0
00095b  00                DCB      0
                  |L8.2396|
00095c  493a00            DCB      "I:",0
00095f  00                DCB      0
                  |L8.2400|
                          DCD      0x00bfffff
                  |L8.2404|
000964  4c6f6164          DCB      "Load C",0
000968  204300  
00096b  00                DCB      0
                  |L8.2412|
                          DCD      GUI_Font24_1
                  |L8.2416|
                          DCD      GUI_FontD24x32
                  |L8.2420|
000974  25303564          DCB      "%05d",0
000978  00      
000979  00                DCB      0
00097a  00                DCB      0
00097b  00                DCB      0
                  |L8.2428|
00097c  4d6f6465          DCB      "Mode",0
000980  00      
000981  00                DCB      0
000982  00                DCB      0
000983  00                DCB      0
                  |L8.2436|
000984  e088              B        |L8.2712|
                  |L8.2438|
000986  a1ac              ADR      r1,|L8.3128|
000988  4630              MOV      r0,r6                 ;557
00098a  f7fffffe          BL       TEXT_SetText
                  |L8.2446|
00098e  f8980002          LDRB     r0,[r8,#2]            ;560  ; load_mode
000992  f8df92b0          LDR      r9,|L8.3140|
000996  4eac              LDR      r6,|L8.3144|
000998  f640110f          MOV      r1,#0x90f             ;562
00099c  f44f6880          MOV      r8,#0x400             ;566
0009a0  2801              CMP      r0,#1                 ;560
0009a2  d077              BEQ      |L8.2708|
0009a4  2800              CMP      r0,#0                 ;569
0009a6  d076              BEQ      |L8.2710|
0009a8  e0d1              B        |L8.2894|
                  |L8.2474|
0009aa  6860              LDR      r0,[r4,#4]            ;381
0009ac  f7fffffe          BL       WM_GetDialogItem
0009b0  9002              STR      r0,[sp,#8]            ;381
0009b2  2200              MOVS     r2,#0                 ;382
0009b4  4611              MOV      r1,r2                 ;382
0009b6  9802              LDR      r0,[sp,#8]            ;382
0009b8  f7fffffe          BL       BUTTON_SetTextColor
0009bc  49a3              LDR      r1,|L8.3148|
0009be  9802              LDR      r0,[sp,#8]            ;383
0009c0  f7fffffe          BL       BUTTON_SetFont
0009c4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0009c8  a1a1              ADR      r1,|L8.3152|
0009ca  9802              LDR      r0,[sp,#8]            ;385
0009cc  f7fffffe          BL       BUTTON_SetText
0009d0  4649              MOV      r1,r9                 ;389
0009d2  6860              LDR      r0,[r4,#4]            ;389
0009d4  f7fffffe          BL       WM_GetDialogItem
0009d8  4681              MOV      r9,r0                 ;389
0009da  2101              MOVS     r1,#1                 ;390
0009dc  4648              MOV      r0,r9                 ;390
0009de  f7fffffe          BL       BUTTON_SetPressed
0009e2  2200              MOVS     r2,#0                 ;391
0009e4  4611              MOV      r1,r2                 ;391
0009e6  4648              MOV      r0,r9                 ;391
0009e8  f7fffffe          BL       BUTTON_SetTextColor
0009ec  4997              LDR      r1,|L8.3148|
0009ee  4648              MOV      r0,r9                 ;392
0009f0  f7fffffe          BL       BUTTON_SetFont
0009f4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0009f8  a199              ADR      r1,|L8.3168|
0009fa  4648              MOV      r0,r9                 ;394
0009fc  f7fffffe          BL       BUTTON_SetText
000a00  4651              MOV      r1,r10                ;398
000a02  6860              LDR      r0,[r4,#4]            ;398
000a04  f7fffffe          BL       WM_GetDialogItem
000a08  4681              MOV      r9,r0                 ;398
000a0a  2200              MOVS     r2,#0                 ;399
000a0c  4611              MOV      r1,r2                 ;399
000a0e  4648              MOV      r0,r9                 ;399
000a10  f7fffffe          BL       BUTTON_SetTextColor
000a14  498d              LDR      r1,|L8.3148|
000a16  4648              MOV      r0,r9                 ;400
000a18  f7fffffe          BL       BUTTON_SetFont
000a1c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a20  a193              ADR      r1,|L8.3184|
000a22  4648              MOV      r0,r9                 ;402
000a24  f7fffffe          BL       BUTTON_SetText
000a28  f640010e          MOV      r1,#0x80e             ;406
000a2c  6860              LDR      r0,[r4,#4]            ;406
000a2e  f7fffffe          BL       WM_GetDialogItem
000a32  4681              MOV      r9,r0                 ;406
000a34  2200              MOVS     r2,#0                 ;407
000a36  4611              MOV      r1,r2                 ;407
000a38  4648              MOV      r0,r9                 ;407
000a3a  f7fffffe          BL       BUTTON_SetTextColor
000a3e  4983              LDR      r1,|L8.3148|
000a40  4648              MOV      r0,r9                 ;408
000a42  f7fffffe          BL       BUTTON_SetFont
000a46  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a4a  a18d              ADR      r1,|L8.3200|
000a4c  4648              MOV      r0,r9                 ;410
000a4e  f7fffffe          BL       BUTTON_SetText
000a52  f640010f          MOV      r1,#0x80f             ;414
000a56  6860              LDR      r0,[r4,#4]            ;414
000a58  f7fffffe          BL       WM_GetDialogItem
000a5c  4681              MOV      r9,r0                 ;414
000a5e  2200              MOVS     r2,#0                 ;415
000a60  4611              MOV      r1,r2                 ;415
000a62  4648              MOV      r0,r9                 ;415
000a64  f7fffffe          BL       BUTTON_SetTextColor
000a68  4978              LDR      r1,|L8.3148|
000a6a  4648              MOV      r0,r9                 ;416
000a6c  f7fffffe          BL       BUTTON_SetFont
000a70  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a74  a185              ADR      r1,|L8.3212|
000a76  4648              MOV      r0,r9                 ;418
000a78  f7fffffe          BL       BUTTON_SetText
000a7c  e610              B        |L8.1696|
                  |L8.2686|
000a7e  4985              LDR      r1,|L8.3220|
000a80  4630              MOV      r0,r6                 ;490
000a82  f7fffffe          BL       TEXT_SetFont
000a86  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a8a  a183              ADR      r1,|L8.3224|
000a8c  4630              MOV      r0,r6                 ;492
000a8e  f7fffffe          BL       TEXT_SetText
000a92  e674              B        |L8.1918|
                  |L8.2708|
000a94  e026              B        |L8.2788|
                  |L8.2710|
000a96  e040              B        |L8.2842|
                  |L8.2712|
000a98  6860              LDR      r0,[r4,#4]            ;535
000a9a  f7fffffe          BL       WM_GetDialogItem
000a9e  4681              MOV      r9,r0                 ;535
000aa0  4659              MOV      r1,r11                ;536
000aa2  4648              MOV      r0,r9                 ;536
000aa4  f7fffffe          BL       TEXT_SetTextColor
000aa8  497a              LDR      r1,|L8.3220|
000aaa  4648              MOV      r0,r9                 ;537
000aac  f7fffffe          BL       TEXT_SetFont
000ab0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000ab4  a17c              ADR      r1,|L8.3240|
000ab6  4648              MOV      r0,r9                 ;539
000ab8  f7fffffe          BL       TEXT_SetText
000abc  4631              MOV      r1,r6                 ;541
000abe  6860              LDR      r0,[r4,#4]            ;541
000ac0  f7fffffe          BL       WM_GetDialogItem
000ac4  4606              MOV      r6,r0                 ;541
000ac6  4659              MOV      r1,r11                ;542
000ac8  4630              MOV      r0,r6                 ;542
000aca  f7fffffe          BL       TEXT_SetTextColor
000ace  4971              LDR      r1,|L8.3220|
000ad0  4630              MOV      r0,r6                 ;543
000ad2  f7fffffe          BL       TEXT_SetFont
000ad6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000ada  a177              ADR      r1,|L8.3256|
000adc  4630              MOV      r0,r6                 ;545
000ade  f7fffffe          BL       TEXT_SetText
000ae2  e754              B        |L8.2446|
                  |L8.2788|
000ae4  6860              LDR      r0,[r4,#4]            ;562
000ae6  f7fffffe          BL       WM_GetDialogItem
000aea  4682              MOV      r10,r0                ;562
000aec  4659              MOV      r1,r11                ;563
000aee  4650              MOV      r0,r10                ;563
000af0  f7fffffe          BL       TEXT_SetTextColor
000af4  4974              LDR      r1,|L8.3272|
000af6  4650              MOV      r0,r10                ;564
000af8  f7fffffe          BL       TEXT_SetFont
000afc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000b00  4641              MOV      r1,r8                 ;566
000b02  4648              MOV      r0,r9                 ;566
000b04  f7fffffe          BL       GPIO_SetBits
000b08  a170              ADR      r1,|L8.3276|
000b0a  4650              MOV      r0,r10                ;567
000b0c  f7fffffe          BL       TEXT_SetText
000b10  6830              LDR      r0,[r6,#0]            ;568  ; flagD
000b12  f0400080          ORR      r0,r0,#0x80           ;568
000b16  6030              STR      r0,[r6,#0]            ;568  ; flagD
000b18  e019              B        |L8.2894|
                  |L8.2842|
000b1a  6860              LDR      r0,[r4,#4]            ;570
000b1c  f7fffffe          BL       WM_GetDialogItem
000b20  4682              MOV      r10,r0                ;570
000b22  4659              MOV      r1,r11                ;571
000b24  4650              MOV      r0,r10                ;571
000b26  f7fffffe          BL       TEXT_SetTextColor
000b2a  4967              LDR      r1,|L8.3272|
000b2c  4650              MOV      r0,r10                ;572
000b2e  f7fffffe          BL       TEXT_SetFont
000b32  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000b36  4641              MOV      r1,r8                 ;574
000b38  4648              MOV      r0,r9                 ;574
000b3a  f7fffffe          BL       GPIO_ResetBits
000b3e  a164              ADR      r1,|L8.3280|
000b40  4650              MOV      r0,r10                ;575
000b42  f7fffffe          BL       TEXT_SetText
000b46  6830              LDR      r0,[r6,#0]            ;576  ; flagD
000b48  f0200080          BIC      r0,r0,#0x80           ;576
000b4c  6030              STR      r0,[r6,#0]            ;576  ; flagD
                  |L8.2894|
000b4e  7838              LDRB     r0,[r7,#0]            ;579  ; lang
000b50  f44f6111          MOV      r1,#0x910             ;581
000b54  b3f0              CBZ      r0,|L8.3028|
000b56  6860              LDR      r0,[r4,#4]            ;587
000b58  f7fffffe          BL       WM_GetDialogItem
000b5c  4606              MOV      r6,r0                 ;587
000b5e  4659              MOV      r1,r11                ;588
000b60  4630              MOV      r0,r6                 ;588
000b62  f7fffffe          BL       TEXT_SetTextColor
000b66  495b              LDR      r1,|L8.3284|
000b68  4630              MOV      r0,r6                 ;589
000b6a  f7fffffe          BL       TEXT_SetFont
000b6e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000b72  a159              ADR      r1,|L8.3288|
000b74  4630              MOV      r0,r6                 ;591
000b76  f7fffffe          BL       TEXT_SetText
                  |L8.2938|
000b7a  f6401111          MOV      r1,#0x911             ;594
000b7e  6860              LDR      r0,[r4,#4]            ;594
000b80  f7fffffe          BL       WM_GetDialogItem
000b84  4606              MOV      r6,r0                 ;594
000b86  ee190a10          VMOV     r0,s18                ;595
000b8a  f7fffffe          BL       __aeabi_f2d
000b8e  ec410b10          VMOV     d0,r0,r1              ;595
000b92  ec532b10          VMOV     r2,r3,d0              ;595
000b96  f2af7108          ADR      r1,|L8.1168|
000b9a  4668              MOV      r0,sp                 ;595
000b9c  f7fffffe          BL       __2sprintf
000ba0  4659              MOV      r1,r11                ;596
000ba2  4630              MOV      r0,r6                 ;596
000ba4  f7fffffe          BL       TEXT_SetTextColor
000ba8  4947              LDR      r1,|L8.3272|
000baa  4630              MOV      r0,r6                 ;597
000bac  f7fffffe          BL       TEXT_SetFont
000bb0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000bb4  4669              MOV      r1,sp                 ;599
000bb6  4630              MOV      r0,r6                 ;599
000bb8  f7fffffe          BL       TEXT_SetText
000bbc  f6401112          MOV      r1,#0x912             ;601
000bc0  6860              LDR      r0,[r4,#4]            ;601
000bc2  f7fffffe          BL       WM_GetDialogItem
000bc6  4604              MOV      r4,r0                 ;601
000bc8  4629              MOV      r1,r5                 ;602
000bca  4620              MOV      r0,r4                 ;602
000bcc  f7fffffe          BL       TEXT_SetTextColor
000bd0  493d              LDR      r1,|L8.3272|
000bd2  e000              B        |L8.3030|
                  |L8.3028|
000bd4  e018              B        |L8.3080|
                  |L8.3030|
000bd6  4620              MOV      r0,r4                 ;603
000bd8  f7fffffe          BL       TEXT_SetFont
000bdc  4840              LDR      r0,|L8.3296|
000bde  6800              LDR      r0,[r0,#0]            ;604  ; temp
000be0  f7fffffe          BL       __aeabi_f2d
000be4  ec410b10          VMOV     d0,r0,r1              ;604
000be8  ec532b10          VMOV     r2,r3,d0              ;604
000bec  f2af7144          ADR      r1,|L8.1196|
000bf0  4668              MOV      r0,sp                 ;604
000bf2  f7fffffe          BL       __2sprintf
000bf6  4669              MOV      r1,sp                 ;605
000bf8  4620              MOV      r0,r4                 ;605
000bfa  f7fffffe          BL       TEXT_SetText
                  |L8.3070|
000bfe  b003              ADD      sp,sp,#0xc
000c00  ecbd8b06          VPOP     {d8-d10}
000c04  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.3080|
000c08  6860              LDR      r0,[r4,#4]            ;581
000c0a  f7fffffe          BL       WM_GetDialogItem
000c0e  4606              MOV      r6,r0                 ;581
000c10  4659              MOV      r1,r11                ;582
000c12  4630              MOV      r0,r6                 ;582
000c14  f7fffffe          BL       TEXT_SetTextColor
000c18  491e              LDR      r1,|L8.3220|
000c1a  4630              MOV      r0,r6                 ;583
000c1c  f7fffffe          BL       TEXT_SetFont
000c20  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000c24  a12f              ADR      r1,|L8.3300|
000c26  4630              MOV      r0,r6                 ;585
000c28  f7fffffe          BL       TEXT_SetText
000c2c  e7a5              B        |L8.2938|
                  |L8.3118|
000c2e  68a0              LDR      r0,[r4,#8]            ;612
000c30  f7fffffe          BL       WM_GetId
000c34  e7e3              B        |L8.3070|
;;;711    
                          ENDP

000c36  0000              DCW      0x0000
                  |L8.3128|
000c38  4375746f          DCB      "Cutoff V",0
000c3c  66662056
000c40  00      
000c41  00                DCB      0
000c42  00                DCB      0
000c43  00                DCB      0
                  |L8.3140|
                          DCD      0x40020800
                  |L8.3144|
                          DCD      flagD
                  |L8.3148|
                          DCD      GUI_FontHZ16
                  |L8.3152|
000c50  e58685e9          DCB      229,134,133,233,152,187,230,181,139,232,175,149,0
000c54  98bbe6b5
000c58  8be8af95
000c5c  00      
000c5d  00                DCB      0
000c5e  00                DCB      0
000c5f  00                DCB      0
                  |L8.3168|
000c60  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
000c64  8ea7e8b4
000c68  9fe8bdbd
000c6c  00      
000c6d  00                DCB      0
000c6e  00                DCB      0
000c6f  00                DCB      0
                  |L8.3184|
000c70  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
000c74  8ea7e794
000c78  b5e6ba90
000c7c  00      
000c7d  00                DCB      0
000c7e  00                DCB      0
000c7f  00                DCB      0
                  |L8.3200|
000c80  e58585e6          DCB      229,133,133,230,148,190,231,148,181,0
000c84  94bee794
000c88  b500    
000c8a  00                DCB      0
000c8b  00                DCB      0
                  |L8.3212|
000c8c  e69bb2e7          DCB      230,155,178,231,186,191,0
000c90  babf00  
000c93  00                DCB      0
                  |L8.3220|
                          DCD      GUI_Fontset_font
                  |L8.3224|
000c98  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,230,181,129,0
000c9c  bdbde794
000ca0  b5e6b581
000ca4  00      
000ca5  00                DCB      0
000ca6  00                DCB      0
000ca7  00                DCB      0
                  |L8.3240|
000ca8  e8b49fe8          DCB      232,180,159,232,189,189,230,168,161,229,188,143,0
000cac  bdbde6a8
000cb0  a1e5bc8f
000cb4  00      
000cb5  00                DCB      0
000cb6  00                DCB      0
000cb7  00                DCB      0
                  |L8.3256|
000cb8  e688aae6          DCB      230,136,170,230,173,162,231,148,181,229,142,139,0
000cbc  ada2e794
000cc0  b5e58e8b
000cc4  00      
000cc5  00                DCB      0
000cc6  00                DCB      0
000cc7  00                DCB      0
                  |L8.3272|
                          DCD      GUI_Font24_1
                  |L8.3276|
000ccc  434300            DCB      "CC",0
000ccf  00                DCB      0
                  |L8.3280|
000cd0  435600            DCB      "CV",0
000cd3  00                DCB      0
                  |L8.3284|
                          DCD      GUI_Font20_ASCII
                  |L8.3288|
000cd8  4c6f6164          DCB      "Load V",0
000cdc  205600  
000cdf  00                DCB      0
                  |L8.3296|
                          DCD      temp
                  |L8.3300|
000ce4  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,229,142,139,0
000ce8  bdbde794
000cec  b5e58e8b
000cf0  00      
000cf1  00                DCB      0
000cf2  00                DCB      0
000cf3  00                DCB      0

                          AREA ||i.test_load||, CODE, READONLY, ALIGN=2

                  test_load PROC
;;;1458   
;;;1459   void test_load(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1460   {
;;;1461   
;;;1462       if(load_sw == load_on && para_set1 == set_1_on)
000002  4827              LDR      r0,|L9.160|
000004  7802              LDRB     r2,[r0,#0]  ; load_sw
;;;1463       {
;;;1464           if(DISS_Voltage*100 > set_max_v || DISS_Voltage*100 < set_min_v)
;;;1465           {
;;;1466              if(para_set4 == set_4_on){
;;;1467                   BEEP_Tiggr();
;;;1468               }
;;;1469               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1470               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d27              LDR      r5,|L9.164|
000008  f44f5480          MOV      r4,#0x1000
00000c  2a01              CMP      r2,#1                 ;1462
00000e  d103              BNE      |L9.24|
000010  4825              LDR      r0,|L9.168|
000012  7800              LDRB     r0,[r0,#0]            ;1462  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1462
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1471           }else{
;;;1472               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1473               TM1650_SET_LED(0x48,0x71);
;;;1474               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1475           }        
;;;1476       }else
;;;1477       {
;;;1478           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1479           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  4a1f              LDR      r2,|L9.172|
00002e  ed9f0a20          VLDR     s0,|L9.176|
000032  edd20a00          VLDR     s1,[r2,#0]            ;1464
000036  4a1f              LDR      r2,|L9.180|
000038  ee200a80          VMUL.F32 s0,s1,s0              ;1464
00003c  6b93              LDR      r3,[r2,#0x38]         ;1464  ; Run_Control
00003e  ee003a90          VMOV     s1,r3                 ;1464
000042  eef80a60          VCVT.F32.U32 s1,s1                 ;1464
000046  eeb40ae0          VCMPE.F32 s0,s1                 ;1464
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1464
00004e  dc09              BGT      |L9.100|
000050  6bd2              LDR      r2,[r2,#0x3c]         ;1464  ; Run_Control
000052  ee002a90          VMOV     s1,r2                 ;1464
000056  eef80a60          VCVT.F32.U32 s1,s1                 ;1464
00005a  eeb40ae0          VCMPE.F32 s0,s1                 ;1464
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1464
000062  d20f              BCS      |L9.132|
                  |L9.100|
000064  4814              LDR      r0,|L9.184|
000066  7800              LDRB     r0,[r0,#0]            ;1466  ; para_set4
000068  28ff              CMP      r0,#0xff              ;1466
00006a  d101              BNE      |L9.112|
00006c  f7fffffe          BL       BEEP_Tiggr
                  |L9.112|
000070  2170              MOVS     r1,#0x70              ;1469
000072  2068              MOVS     r0,#0x68              ;1469
000074  f7fffffe          BL       TM1650_SET_LED
000078  4621              MOV      r1,r4                 ;1470
00007a  4628              MOV      r0,r5                 ;1470
00007c  e8bd4070          POP      {r4-r6,lr}            ;1470
000080  f7ffbffe          B.W      GPIO_SetBits
                  |L9.132|
000084  4621              MOV      r1,r4                 ;1472
000086  4628              MOV      r0,r5                 ;1472
000088  f7fffffe          BL       GPIO_ResetBits
00008c  2171              MOVS     r1,#0x71              ;1473
00008e  2048              MOVS     r0,#0x48              ;1473
000090  f7fffffe          BL       TM1650_SET_LED
000094  e8bd4070          POP      {r4-r6,lr}            ;1474
000098  21f2              MOVS     r1,#0xf2              ;1474
00009a  2068              MOVS     r0,#0x68              ;1474
00009c  f7ffbffe          B.W      TM1650_SET_LED
;;;1480       }
;;;1481   }
                          ENDP

                  |L9.160|
                          DCD      ||.data||
                  |L9.164|
                          DCD      0x40020c00
                  |L9.168|
                          DCD      para_set1
                  |L9.172|
                          DCD      DISS_Voltage
                  |L9.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L9.180|
                          DCD      Run_Control
                  |L9.184|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate2
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08090000          DCW      0x0809,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080b0053          DCW      0x080b,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080c00a3          DCW      0x080c,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080d00f3          DCW      0x080d,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  080e0143          DCW      0x080e,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  080f0193          DCW      0x080f,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0810001c          DCW      0x0810,0x001c
0000b4  00320040          DCW      0x0032,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0811001c          DCW      0x0811,0x001c
0000d0  00780040          DCW      0x0078,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  081e00f0          DCW      0x081e,0x00f0
0000ec  00320020          DCW      0x0032,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  081f00f0          DCW      0x081f,0x00f0
000108  00790020          DCW      0x0079,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  086d0122          DCW      0x086d,0x0122
000124  004b0050          DCW      0x004b,0x0050
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  086e017c          DCW      0x086e,0x017c
000140  004b0041          DCW      0x004b,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  090e0122          DCW      0x090e,0x0122
00015c  007d0050          DCW      0x007d,0x0050
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  09390122          DCW      0x0939,0x0122
000178  00960050          DCW      0x0096,0x0050
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  090f017c          DCW      0x090f,0x017c
000194  007d0041          DCW      0x007d,0x0041
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  09100122          DCW      0x0910,0x0122
0001b0  00640050          DCW      0x0064,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  0911017c          DCW      0x0911,0x017c
0001cc  00640041          DCW      0x0064,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  0891005f          DCW      0x0891,0x005f
0001e8  00300096          DCW      0x0030,0x0096
0001ec  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  0892005f          DCW      0x0892,0x005f
000204  00740096          DCW      0x0074,0x0096
000208  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  08960190          DCW      0x0896,0x0190
000220  00040050          DCW      0x0004,0x0050
000224  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000238  090d005f          DCW      0x090d,0x005f
00023c  00b80096          DCW      0x00b8,0x0096
000240  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000254  0912012c          DCW      0x0912,0x012c
000258  00020050          DCW      0x0002,0x0050
00025c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000270  092d017c          DCW      0x092d,0x017c
000274  00960041          DCW      0x0096,0x0041
000278  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00028c  093d017c          DCW      0x093d,0x017c
000290  00080014          DCW      0x0008,0x0014
000294  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  load_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  load_mode
000002  0000              DCB      0x00,0x00
                  load_wind
                          DCD      0x00000000
                  load_cutoffv
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\load_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_load_Face_c_load_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REVSH|
#line 144
|__asm___11_load_Face_c_load_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
