; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\delay.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\delay.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=537 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\delay.crf --no_multibyte_chars ..\drive\delay.c]
                          THUMB

                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;53     //SYSCLK:系统时钟
;;;54     void delay_init()	 
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56     
;;;57     #ifdef OS_CRITICAL_METHOD 	//如果OS_CRITICAL_METHOD定义了,说明使用ucosII了.
;;;58     	u32 reload;
;;;59     #endif
;;;60     	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);	//选择外部时钟  HCLK/8
000002  f06f0004          MVN      r0,#4
000006  f7fffffe          BL       SysTick_CLKSourceConfig
;;;61     	fac_us=SystemCoreClock/8000000;	//为系统时钟的1/8  
00000a  4809              LDR      r0,|L1.48|
00000c  4909              LDR      r1,|L1.52|
00000e  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000010  fbb0f0f1          UDIV     r0,r0,r1
000014  4908              LDR      r1,|L1.56|
000016  b2c0              UXTB     r0,r0
000018  7008              STRB     r0,[r1,#0]
;;;62     	 
;;;63     #ifdef OS_CRITICAL_METHOD 	//如果OS_CRITICAL_METHOD定义了,说明使用ucosII了.
;;;64     	reload=SystemCoreClock/8000000;		//每秒钟的计数次数 单位为K	   
;;;65     	reload*=1000000/OS_TICKS_PER_SEC;//根据OS_TICKS_PER_SEC设定溢出时间
;;;66     							//reload为24位寄存器,最大值:16777216,在72M下,约合1.86s左右	
;;;67     	fac_ms=1000/OS_TICKS_PER_SEC;//代表ucos可以延时的最少单位	   
;;;68     	SysTick->CTRL|=SysTick_CTRL_TICKINT_Msk;   	//开启SYSTICK中断
;;;69     	SysTick->LOAD=reload; 	//每1/OS_TICKS_PER_SEC秒中断一次	
;;;70     	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk;   	//开启SYSTICK    
;;;71     #else
;;;72     	fac_ms=(u16)fac_us*1000;//非ucos下,代表每个ms需要的systick时钟数   
00001a  eb000240          ADD      r2,r0,r0,LSL #1
00001e  ebc210c0          RSB      r0,r2,r0,LSL #7
000022  f64f72ff          MOV      r2,#0xffff
000026  ea0200c0          AND      r0,r2,r0,LSL #3
00002a  8048              STRH     r0,[r1,#2]
;;;73     #endif
;;;74     }								    
00002c  bd10              POP      {r4,pc}
;;;75     
                          ENDP

00002e  0000              DCW      0x0000
                  |L1.48|
                          DCD      SystemCoreClock
                  |L1.52|
                          DCD      0x007a1200
                  |L1.56|
                          DCD      ||.data||

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

                  delay_ms PROC
;;;135    //对72M条件下,nms<=1864 
;;;136    void delay_ms(u16 nms)
000000  490b              LDR      r1,|L2.48|
;;;137    {	 		  	  
;;;138    	u32 temp;		   
;;;139    	SysTick->LOAD=(u32)nms*fac_ms;//时间加载(SysTick->LOAD为24bit)
000002  8849              LDRH     r1,[r1,#2]  ; fac_ms
000004  4348              MULS     r0,r1,r0
000006  f04f21e0          MOV      r1,#0xe000e000
00000a  6148              STR      r0,[r1,#0x14]
;;;140    	SysTick->VAL =0x00;           //清空计数器
00000c  2300              MOVS     r3,#0
00000e  618b              STR      r3,[r1,#0x18]
;;;141    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;          //开始倒数  
000010  6908              LDR      r0,[r1,#0x10]
000012  f0400001          ORR      r0,r0,#1
000016  6108              STR      r0,[r1,#0x10]
                  |L2.24|
;;;142    	do
;;;143    	{
;;;144    		temp=SysTick->CTRL;
000018  6908              LDR      r0,[r1,#0x10]
;;;145    	}
;;;146    	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
00001a  07c2              LSLS     r2,r0,#31
00001c  d001              BEQ      |L2.34|
00001e  03c0              LSLS     r0,r0,#15
000020  d5fa              BPL      |L2.24|
                  |L2.34|
;;;147    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;       //关闭计数器
000022  6908              LDR      r0,[r1,#0x10]
000024  f0200001          BIC      r0,r0,#1
000028  6108              STR      r0,[r1,#0x10]
;;;148    	SysTick->VAL =0X00;       //清空计数器	  	    
00002a  618b              STR      r3,[r1,#0x18]
;;;149    } 
00002c  4770              BX       lr
;;;150    #endif
                          ENDP

00002e  0000              DCW      0x0000
                  |L2.48|
                          DCD      ||.data||

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;115    //nus为要延时的us数.		    								   
;;;116    void delay_us(u32 nus)
000000  490b              LDR      r1,|L3.48|
;;;117    {		
;;;118    	u32 temp;	    	 
;;;119    	SysTick->LOAD=nus*fac_us; //时间加载	  		 
000002  7809              LDRB     r1,[r1,#0]  ; fac_us
000004  4348              MULS     r0,r1,r0
000006  f04f21e0          MOV      r1,#0xe000e000
00000a  6148              STR      r0,[r1,#0x14]
;;;120    	SysTick->VAL=0x00;        //清空计数器
00000c  2300              MOVS     r3,#0
00000e  618b              STR      r3,[r1,#0x18]
;;;121    	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;          //开始倒数	 
000010  6908              LDR      r0,[r1,#0x10]
000012  f0400001          ORR      r0,r0,#1
000016  6108              STR      r0,[r1,#0x10]
                  |L3.24|
;;;122    	do
;;;123    	{
;;;124    		temp=SysTick->CTRL;
000018  6908              LDR      r0,[r1,#0x10]
;;;125    	}
;;;126    	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
00001a  07c2              LSLS     r2,r0,#31
00001c  d001              BEQ      |L3.34|
00001e  03c0              LSLS     r0,r0,#15
000020  d5fa              BPL      |L3.24|
                  |L3.34|
;;;127    	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;       //关闭计数器
000022  6908              LDR      r0,[r1,#0x10]
000024  f0200001          BIC      r0,r0,#1
000028  6108              STR      r0,[r1,#0x10]
;;;128    	SysTick->VAL =0X00;       //清空计数器	 
00002a  618b              STR      r3,[r1,#0x18]
;;;129    }
00002c  4770              BX       lr
;;;130    //延时nms
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\drive\\delay.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_delay_c_f6a9c549____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____REVSH|
#line 144
|__asm___7_delay_c_f6a9c549____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
