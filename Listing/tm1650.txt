; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\tm1650.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\tm1650.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=537 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\tm1650.crf --no_multibyte_chars ..\drive\TM1650.c]
                          THUMB

                          AREA ||i.IIc_Ack||, CODE, READONLY, ALIGN=2

                  IIc_Ack PROC
;;;182    **********************************************************************************************************/
;;;183    void IIc_Ack(void)
000000  b570              PUSH     {r4-r6,lr}
;;;184    {
;;;185    	TM1650_SDA_0();	/* CPUȽ֯SDA = 0 */
000002  4d0d              LDR      r5,|L1.56|
000004  f44f7480          MOV      r4,#0x100
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_ResetBits
;;;186    	IIc_Delay();
000010  f7fffffe          BL       IIc_Delay
;;;187    	TM1650_SCL_1();	/* CPUӺʺ1ٶʱד */
000014  2180              MOVS     r1,#0x80
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       GPIO_SetBits
;;;188    	IIc_Delay();
00001c  f7fffffe          BL       IIc_Delay
;;;189    	TM1650_SCL_0();
000020  2180              MOVS     r1,#0x80
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       GPIO_ResetBits
;;;190    	IIc_Delay();
000028  f7fffffe          BL       IIc_Delay
;;;191    	TM1650_SDA_1();	/* CPUˍ؅SDA؜П */
00002c  4621              MOV      r1,r4
00002e  4628              MOV      r0,r5
000030  e8bd4070          POP      {r4-r6,lr}
000034  f7ffbffe          B.W      GPIO_SetBits
;;;192    }
;;;193    
                          ENDP

                  |L1.56|
                          DCD      0x40020800

                          AREA ||i.IIc_Delay||, CODE, READONLY, ALIGN=1

                  IIc_Delay PROC
;;;50     **********************************************************************************************************/
;;;51     static void IIc_Delay(void)
000000  b508              PUSH     {r3,lr}
;;;52     {
;;;53     	vu8 i;
;;;54     	for (i = 0; i < 200; i++);
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
000006  e003              B        |L2.16|
                  |L2.8|
000008  f89d0000          LDRB     r0,[sp,#0]
00000c  1c40              ADDS     r0,r0,#1
00000e  9000              STR      r0,[sp,#0]
                  |L2.16|
000010  f89d0000          LDRB     r0,[sp,#0]
000014  28c8              CMP      r0,#0xc8
000016  d3f7              BCC      |L2.8|
;;;55     }
000018  bd08              POP      {r3,pc}
;;;56     /**********************************************************************************************************
                          ENDP


                          AREA ||i.IIc_NAck||, CODE, READONLY, ALIGN=2

                  IIc_NAck PROC
;;;199    **********************************************************************************************************/
;;;200    void IIc_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;201    {
;;;202    	TM1650_SDA_1();	/* CPUȽ֯SDA = 1 */
000002  4c0b              LDR      r4,|L3.48|
000004  f44f7180          MOV      r1,#0x100
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       GPIO_SetBits
;;;203    	IIc_Delay();
00000e  f7fffffe          BL       IIc_Delay
;;;204    	TM1650_SCL_1();	/* CPUӺʺ1ٶʱד */
000012  2180              MOVS     r1,#0x80
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       GPIO_SetBits
;;;205    	IIc_Delay();
00001a  f7fffffe          BL       IIc_Delay
;;;206    	TM1650_SCL_0();
00001e  2180              MOVS     r1,#0x80
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       GPIO_ResetBits
;;;207    	IIc_Delay();	
000026  e8bd4010          POP      {r4,lr}
00002a  f7ffbffe          B.W      IIc_Delay
;;;208    }
;;;209    
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      0x40020800

                          AREA ||i.IIc_ReadByte||, CODE, READONLY, ALIGN=2

                  IIc_ReadByte PROC
;;;129    **********************************************************************************************************/
;;;130    vu8 IIc_ReadByte(void)
000000  b57c              PUSH     {r2-r6,lr}
;;;131    {
;;;132    	vu8 i;
;;;133    	vu8 value;
;;;134    
;;;135    	/*接受一个8位数据 */
;;;136    	value = 0;
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
;;;137    	for (i = 0; i < 8; i++)
000006  9001              STR      r0,[sp,#4]
;;;138    	{
;;;139    		value <<= 1;
;;;140    		TM1650_SCL_1();
000008  4c13              LDR      r4,|L4.88|
;;;141    		IIc_Delay();
;;;142    		if (TM1650_SDA_READ())
00000a  15a5              ASRS     r5,r4,#22
00000c  e01c              B        |L4.72|
                  |L4.14|
00000e  f89d0000          LDRB     r0,[sp,#0]            ;139
000012  0040              LSLS     r0,r0,#1              ;139
000014  9000              STR      r0,[sp,#0]            ;139
000016  2180              MOVS     r1,#0x80              ;140
000018  4620              MOV      r0,r4                 ;140
00001a  f7fffffe          BL       GPIO_SetBits
00001e  f7fffffe          BL       IIc_Delay
000022  4629              MOV      r1,r5
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       GPIO_ReadInputDataBit
00002a  b118              CBZ      r0,|L4.52|
;;;143    		{
;;;144    			value++;
00002c  f89d0000          LDRB     r0,[sp,#0]
000030  1c40              ADDS     r0,r0,#1
000032  9000              STR      r0,[sp,#0]
                  |L4.52|
;;;145    		}
;;;146    		TM1650_SCL_0();
000034  2180              MOVS     r1,#0x80
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       GPIO_ResetBits
;;;147    		IIc_Delay();
00003c  f7fffffe          BL       IIc_Delay
000040  f89d0004          LDRB     r0,[sp,#4]            ;137
000044  1c40              ADDS     r0,r0,#1              ;137
000046  9001              STR      r0,[sp,#4]            ;137
                  |L4.72|
000048  f89d0004          LDRB     r0,[sp,#4]            ;137
00004c  2808              CMP      r0,#8                 ;137
00004e  d3de              BCC      |L4.14|
;;;148    	}
;;;149    	return value;
000050  f89d0000          LDRB     r0,[sp,#0]
;;;150    }
000054  bd7c              POP      {r2-r6,pc}
;;;151    /**********************************************************************************************************
                          ENDP

000056  0000              DCW      0x0000
                  |L4.88|
                          DCD      0x40020800

                          AREA ||i.IIc_SendByte||, CODE, READONLY, ALIGN=2

                  IIc_SendByte PROC
;;;96     **********************************************************************************************************/
;;;97     void IIc_SendByte(vu8 _ucByte)
000000  b531              PUSH     {r0,r4,r5,lr}
;;;98     {
000002  b082              SUB      sp,sp,#8
;;;99     	vu8 i;
;;;100    
;;;101    	/* 发送一个8位数据 */
;;;102    	for (i = 0; i < 8; i++)
000004  2000              MOVS     r0,#0
000006  9001              STR      r0,[sp,#4]
;;;103    	{		
;;;104    		if (_ucByte & 0x80)
;;;105    		{
;;;106    			TM1650_SDA_1();
000008  f44f7580          MOV      r5,#0x100
00000c  4c18              LDR      r4,|L5.112|
00000e  e02a              B        |L5.102|
                  |L5.16|
000010  f89d0008          LDRB     r0,[sp,#8]            ;104
000014  0600              LSLS     r0,r0,#24             ;104
000016  d504              BPL      |L5.34|
000018  4629              MOV      r1,r5
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       GPIO_SetBits
000020  e003              B        |L5.42|
                  |L5.34|
;;;107    		}
;;;108    		else
;;;109    		{
;;;110    			TM1650_SDA_0();
000022  4629              MOV      r1,r5
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       GPIO_ResetBits
                  |L5.42|
;;;111    		}
;;;112    		IIc_Delay();
00002a  f7fffffe          BL       IIc_Delay
;;;113    		TM1650_SCL_1();
00002e  2180              MOVS     r1,#0x80
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       GPIO_SetBits
;;;114    		IIc_Delay();	
000036  f7fffffe          BL       IIc_Delay
;;;115    		TM1650_SCL_0();
00003a  2180              MOVS     r1,#0x80
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       GPIO_ResetBits
;;;116    		if (i == 7)
000042  f89d2004          LDRB     r2,[sp,#4]
000046  2a07              CMP      r2,#7
000048  d103              BNE      |L5.82|
;;;117    		{
;;;118    			 TM1650_SDA_1(); // 置高
00004a  4629              MOV      r1,r5
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       GPIO_SetBits
                  |L5.82|
;;;119    		}
;;;120    		_ucByte <<= 1;	/* 先送高位 */
000052  f89d0008          LDRB     r0,[sp,#8]
000056  0042              LSLS     r2,r0,#1
000058  9202              STR      r2,[sp,#8]
;;;121    		IIc_Delay();
00005a  f7fffffe          BL       IIc_Delay
00005e  f89d2004          LDRB     r2,[sp,#4]            ;102
000062  1c52              ADDS     r2,r2,#1              ;102
000064  9201              STR      r2,[sp,#4]            ;102
                  |L5.102|
000066  f89d0004          LDRB     r0,[sp,#4]            ;102
00006a  2808              CMP      r0,#8                 ;102
00006c  d3d0              BCC      |L5.16|
;;;122    	}
;;;123    }
00006e  bd3e              POP      {r1-r5,pc}
;;;124    /**********************************************************************************************************
                          ENDP

                  |L5.112|
                          DCD      0x40020800

                          AREA ||i.IIc_Start||, CODE, READONLY, ALIGN=2

                  IIc_Start PROC
;;;61     **********************************************************************************************************/
;;;62     void IIc_Start(void)
000000  b570              PUSH     {r4-r6,lr}
;;;63     {
;;;64     	/* 启动IIC */
;;;65     	TM1650_SCL_1();
000002  4c0c              LDR      r4,|L6.52|
000004  2180              MOVS     r1,#0x80
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       GPIO_SetBits
;;;66     	TM1650_SDA_1();
00000c  15a5              ASRS     r5,r4,#22
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       GPIO_SetBits
;;;67     	IIc_Delay();
000016  f7fffffe          BL       IIc_Delay
;;;68     	TM1650_SDA_0();
00001a  4629              MOV      r1,r5
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       GPIO_ResetBits
;;;69     	IIc_Delay();
000022  f7fffffe          BL       IIc_Delay
;;;70     	TM1650_SCL_0();
000026  4620              MOV      r0,r4
000028  e8bd4070          POP      {r4-r6,lr}
00002c  2180              MOVS     r1,#0x80
00002e  f7ffbffe          B.W      GPIO_ResetBits
;;;71     //	IIc_Delay();
;;;72     }
;;;73     /**********************************************************************************************************
                          ENDP

000032  0000              DCW      0x0000
                  |L6.52|
                          DCD      0x40020800

                          AREA ||i.IIc_Stop||, CODE, READONLY, ALIGN=2

                  IIc_Stop PROC
;;;78     **********************************************************************************************************/
;;;79     void IIc_Stop(void)
000000  b570              PUSH     {r4-r6,lr}
;;;80     {
;;;81     	/* 发送停止位 */
;;;82     	TM1650_SDA_0();
000002  4d0a              LDR      r5,|L7.44|
000004  f44f7480          MOV      r4,#0x100
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_ResetBits
;;;83     	IIc_Delay();
000010  f7fffffe          BL       IIc_Delay
;;;84     	TM1650_SCL_1();
000014  2180              MOVS     r1,#0x80
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       GPIO_SetBits
;;;85     	IIc_Delay();
00001c  f7fffffe          BL       IIc_Delay
;;;86     	TM1650_SDA_1();
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_SetBits
;;;87     //	IIc_Delay();
;;;88     //	TM1650_SCL_0();
;;;89     //	TM1650_SDA_0();
;;;90     }
;;;91     /**********************************************************************************************************
                          ENDP

                  |L7.44|
                          DCD      0x40020800

                          AREA ||i.IIc_WaitAck||, CODE, READONLY, ALIGN=2

                  IIc_WaitAck PROC
;;;156    **********************************************************************************************************/
;;;157    vu8 IIc_WaitAck(void)
000000  b538              PUSH     {r3-r5,lr}
;;;158    {
;;;159    	vu8 re;
;;;160    
;;;161    	TM1650_SDA_1();	/*  */
000002  4c11              LDR      r4,|L8.72|
000004  f44f7580          MOV      r5,#0x100
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIO_SetBits
;;;162    	IIc_Delay();
000010  f7fffffe          BL       IIc_Delay
;;;163    	TM1650_SCL_1();	/*  */
000014  2180              MOVS     r1,#0x80
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       GPIO_SetBits
;;;164    	IIc_Delay();
00001c  f7fffffe          BL       IIc_Delay
;;;165    	if (TM1650_SDA_READ())	/* 读取ACK */
000020  4629              MOV      r1,r5
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       GPIO_ReadInputDataBit
000028  b110              CBZ      r0,|L8.48|
;;;166    	{
;;;167    		re = 1;
00002a  2001              MOVS     r0,#1
00002c  9000              STR      r0,[sp,#0]
00002e  e001              B        |L8.52|
                  |L8.48|
;;;168    	}
;;;169    	else
;;;170    	{
;;;171    		re = 0;
000030  2000              MOVS     r0,#0
000032  9000              STR      r0,[sp,#0]
                  |L8.52|
;;;172    	}
;;;173    	TM1650_SCL_0();
000034  2180              MOVS     r1,#0x80
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       GPIO_ResetBits
;;;174    	IIc_Delay();
00003c  f7fffffe          BL       IIc_Delay
;;;175    	return re;
000040  f89d0000          LDRB     r0,[sp,#0]
;;;176    }
000044  bd38              POP      {r3-r5,pc}
;;;177    /**********************************************************************************************************
                          ENDP

000046  0000              DCW      0x0000
                  |L8.72|
                          DCD      0x40020800

                          AREA ||i.TM1650Disp||, CODE, READONLY, ALIGN=1

                  TM1650Disp PROC
;;;232    ***/
;;;233    void TM1650Disp(vu8 sdate1, vu8 sdate2, vu8 sdate3, vu8 sdate4)
000000  b51f              PUSH     {r0-r4,lr}
;;;234    {
;;;235    		TM1650_SET_LED(0X68,sdate1);  //GID1-sdate1
000002  f89d1000          LDRB     r1,[sp,#0]
000006  2068              MOVS     r0,#0x68
000008  f7fffffe          BL       TM1650_SET_LED
;;;236    		TM1650_SET_LED(0X6A,sdate2);  //GID2-sdate2
00000c  f89d1004          LDRB     r1,[sp,#4]
000010  206a              MOVS     r0,#0x6a
000012  f7fffffe          BL       TM1650_SET_LED
;;;237    		TM1650_SET_LED(0X6C,sdate3);  //GID3-sdate3
000016  f89d1008          LDRB     r1,[sp,#8]
00001a  206c              MOVS     r0,#0x6c
00001c  f7fffffe          BL       TM1650_SET_LED
;;;238    		TM1650_SET_LED(0X6E,sdate4);  //GID4-sdate4
000020  f89d100c          LDRB     r1,[sp,#0xc]
000024  b004              ADD      sp,sp,#0x10
000026  206e              MOVS     r0,#0x6e
000028  e8bd4010          POP      {r4,lr}
00002c  f7ffbffe          B.W      TM1650_SET_LED
;;;239    }
;;;240    
                          ENDP


                          AREA ||i.TM1650_GPIO_INT||, CODE, READONLY, ALIGN=2

                  TM1650_GPIO_INT PROC
;;;32     **********************************************************************************************************/
;;;33     void TM1650_GPIO_INT(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;34     {
;;;35     	GPIO_InitTypeDef GPIO_InitStructure;//
;;;36     
;;;37     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);//
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;38     
;;;39     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7|GPIO_Pin_8;//
00000a  f44f70c0          MOV      r0,#0x180
00000e  9000              STR      r0,[sp,#0]
;;;40     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000010  2001              MOVS     r0,#1
000012  f88d0004          STRB     r0,[sp,#4]
;;;41     	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;//开漏输出
000016  f88d0006          STRB     r0,[sp,#6]
;;;42     	GPIO_InitStructure.GPIO_Speed =GPIO_Speed_50MHz;//
00001a  2002              MOVS     r0,#2
00001c  f88d0005          STRB     r0,[sp,#5]
;;;43     	GPIO_Init(GPIOC, &GPIO_InitStructure);//
000020  4669              MOV      r1,sp
000022  4802              LDR      r0,|L10.44|
000024  f7fffffe          BL       GPIO_Init
;;;44     }
000028  bd1c              POP      {r2-r4,pc}
;;;45     /**********************************************************************************************************
                          ENDP

00002a  0000              DCW      0x0000
                  |L10.44|
                          DCD      0x40020800

                          AREA ||i.TM1650_Read_KEY||, CODE, READONLY, ALIGN=1

                  TM1650_Read_KEY PROC
;;;246    **********************************************************************************************************/
;;;247    vu8 TM1650_Read_KEY(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;248    {
;;;249    	vu8 ucAck;
;;;250    	vu8 key;
;;;251    
;;;252    	IIc_Start();		/* 开始*/
000002  f7fffffe          BL       IIc_Start
;;;253    
;;;254    	/* 发送地址 */
;;;255    	IIc_SendByte(0x4F);//读按键命令
000006  204f              MOVS     r0,#0x4f
000008  f7fffffe          BL       IIc_SendByte
;;;256    	ucAck = IIc_WaitAck();	/* 等待ACK*/
00000c  f7fffffe          BL       IIc_WaitAck
000010  9001              STR      r0,[sp,#4]
;;;257    	IIc_Delay();
000012  f7fffffe          BL       IIc_Delay
;;;258    	key=IIc_ReadByte();//读取键值
000016  f7fffffe          BL       IIc_ReadByte
00001a  9000              STR      r0,[sp,#0]
;;;259    	IIc_Stop();			/* 读完停止 */
00001c  f7fffffe          BL       IIc_Stop
;;;260    
;;;261    	return key;
000020  f89d0000          LDRB     r0,[sp,#0]
;;;262    }
000024  bd1c              POP      {r2-r4,pc}
;;;263    
                          ENDP


                          AREA ||i.TM1650_SET_LED||, CODE, READONLY, ALIGN=1

                  TM1650_SET_LED PROC
;;;269    **********************************************************************************************************/
;;;270    void TM1650_SET_LED(vu8 addr,vu8 dat)
000000  b503              PUSH     {r0,r1,lr}
;;;271    {
000002  b081              SUB      sp,sp,#4
;;;272    	vu8 ucAck;
;;;273    	IIc_Start();		/* 开始*/
000004  f7fffffe          BL       IIc_Start
;;;274    	IIc_SendByte(addr);
000008  f89d0004          LDRB     r0,[sp,#4]
00000c  f7fffffe          BL       IIc_SendByte
;;;275    	ucAck = IIc_WaitAck();	/* 等待ACK*/
000010  f7fffffe          BL       IIc_WaitAck
000014  9000              STR      r0,[sp,#0]
;;;276    	IIc_SendByte(dat);
000016  f89d0008          LDRB     r0,[sp,#8]
00001a  f7fffffe          BL       IIc_SendByte
;;;277    	ucAck = IIc_WaitAck();	/* 等待ACK*/
00001e  f7fffffe          BL       IIc_WaitAck
000022  9000              STR      r0,[sp,#0]
;;;278    	IIc_Stop();			/* 读完停止 */
000024  e8bd400e          POP      {r1-r3,lr}
000028  f7ffbffe          B.W      IIc_Stop
;;;279    }
                          ENDP


                          AREA ||i.TM1650_SystemCmd||, CODE, READONLY, ALIGN=1

                  TM1650_SystemCmd PROC
;;;217    ***/
;;;218    void TM1650_SystemCmd(vu8 light,vu8 segMod, vu8 WorkMod, vu8 Onoff)
000000  b51f              PUSH     {r0-r4,lr}
;;;219    {
;;;220     	IIc_Start();
000002  f7fffffe          BL       IIc_Start
;;;221    	IIc_SendByte(0x48);
000006  2048              MOVS     r0,#0x48
000008  f7fffffe          BL       IIc_SendByte
;;;222    	IIc_SendByte(light | segMod | WorkMod | Onoff );
00000c  f89d0000          LDRB     r0,[sp,#0]
000010  f89d1004          LDRB     r1,[sp,#4]
000014  4308              ORRS     r0,r0,r1
000016  f89d1008          LDRB     r1,[sp,#8]
00001a  4308              ORRS     r0,r0,r1
00001c  f89d100c          LDRB     r1,[sp,#0xc]
000020  4308              ORRS     r0,r0,r1
000022  f7fffffe          BL       IIc_SendByte
;;;223    	IIc_Stop();
000026  e8bd401f          POP      {r0-r4,lr}
00002a  f7ffbffe          B.W      IIc_Stop
;;;224    }
;;;225    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\drive\\TM1650.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_TM1650_c_840ba131____REV16|
#line 129 "E:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_TM1650_c_840ba131____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_TM1650_c_840ba131____REVSH|
#line 144
|__asm___8_TM1650_c_840ba131____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
